{"version":3,"file":"asc.js","mappings":"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","sources":["webpack://asc/webpack/universalModuleDefinition","webpack://asc/external umd \"assemblyscript\"","webpack://asc/external umd \"binaryen\"","webpack://asc/./asc.js","webpack://asc/./shim/fs.js","webpack://asc/./shim/path.js","webpack://asc/./shim/process.js","webpack://asc/./util/colors.js","webpack://asc/./util/find.js","webpack://asc/./util/mkdirp.js","webpack://asc/./util/options.js","webpack://asc/./util/utf8.js","webpack://asc/../lib/loader/umd/index.js","webpack://asc/../lib/rtrace/umd/index.js","webpack://asc/webpack/bootstrap","webpack://asc/webpack/runtime/global","webpack://asc/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"binaryen\"), (function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"binaryen\", \"assemblyscript\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"asc\"] = factory(require(\"binaryen\"), (function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse\n\t\troot[\"asc\"] = factory(root[\"binaryen\"], root[\"assemblyscript\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__725__, __WEBPACK_EXTERNAL_MODULE__474__) {\nreturn ","if(typeof __WEBPACK_EXTERNAL_MODULE__474__ === 'undefined') { var e = new Error(\"Cannot find module 'assemblyscript'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__474__;","module.exports = __WEBPACK_EXTERNAL_MODULE__725__;","/**\n * @license\n * Copyright 2020 Daniel Wirtz / The AssemblyScript Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Compiler frontend for node.js\n *\n * Uses the low-level API exported from src/index.ts so it works with the compiler compiled to\n * JavaScript as well as the compiler compiled to WebAssembly (eventually). Runs the sources\n * directly through ts-node if distribution files are not present.\n *\n * Can also be packaged as a bundle suitable for in-browser use with the standard library injected\n * in the build step. See dist/asc.js for the bundle and webpack.config.js for building details.\n */\n\n/* global BUNDLE_VERSION, BUNDLE_LIBRARY, BUNDLE_DEFINITIONS */\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst process = require(\"process\"); // ensure shim\nconst utf8 = require(\"./util/utf8\");\nconst colorsUtil = require(\"./util/colors\");\nconst optionsUtil = require(\"./util/options\");\nconst mkdirp = require(\"./util/mkdirp\");\nconst find = require(\"./util/find\");\nconst binaryen = global.binaryen || (global.binaryen = require(\"binaryen\"));\n\nconst dynrequire = typeof __webpack_require__ === \"function\"\n  ? __non_webpack_require__\n  : require;\n\nconst WIN = process.platform === \"win32\";\nconst EOL = WIN ? \"\\r\\n\" : \"\\n\";\nconst SEP = WIN ? \"\\\\\"   : \"/\";\n\nfunction toUpperSnakeCase(str) {\n  return str.replace(/-/g, \"_\").toUpperCase();\n}\n\n// Sets up an extension with its definition counterpart and relevant regexes.\nfunction setupExtension(ext) {\n  if (!ext.startsWith(\".\")) ext = `.${ext}`;\n  return {\n    ext,\n    ext_d: `.d${ext}`,\n    re: new RegExp(\"\\\\\" + ext + \"$\"),\n    re_d: new RegExp(\"\\\\.d\\\\\" + ext + \"$\"),\n    re_except_d: new RegExp(\"^(?!.*\\\\.d\\\\\" + ext + \"$).*\\\\\" + ext + \"$\"),\n    re_index: new RegExp(\"(?:^|[\\\\\\\\\\\\/])index\\\\\" + ext + \"$\")\n  };\n}\n\nconst defaultExtension = setupExtension(\".ts\");\n\n// Proxy Binaryen's ready event\nObject.defineProperty(exports, \"ready\", {\n  get() { return binaryen.ready; }\n});\n\n// Emscripten adds an `uncaughtException` listener to Binaryen that results in an additional\n// useless code fragment on top of an actual error. suppress this:\nif (process.removeAllListeners) {\n  process.removeAllListeners(\"uncaughtException\");\n}\n\n// Use distribution files if present, otherwise run the sources directly.\nfunction loadAssemblyScriptJS() {\n  var exports, tsNode;\n  try {\n    // note that this case will always trigger in recent node.js versions for typical installs\n    // see: https://nodejs.org/api/packages.html#packages_self_referencing_a_package_using_its_name\n    exports = require(\"assemblyscript\");\n  } catch (e) {\n    try { // `asc` on the command line (unnecessary in recent node)\n      exports = dynrequire(\"../dist/assemblyscript.js\");\n    } catch (e) {\n      try { // `asc` on the command line without dist files (unnecessary in recent node)\n        tsNode = dynrequire(\"ts-node\");\n        tsNode.register({\n          project: path.join(__dirname, \"..\", \"src\", \"tsconfig.json\"),\n          typeCheck: false,\n          transpileOnly: true,\n          compilerHost: true,\n          files: true,\n          skipIgnore: true,\n          moduleTypes: {\n            \"../src/glue/js/*\": \"cjs\"\n          },\n          compilerOptions: {\n            module: \"esnext\",\n            target: \"es2017\"\n          }\n        });\n        dynrequire(\"../src/glue/js\");\n        exports = dynrequire(\"../src\");\n      } catch (e_ts) {\n        if (!tsNode || !(e_ts instanceof tsNode.TSError)) {\n          try { // `require(\"dist/asc.js\")` in explicit browser tests\n            exports = dynrequire(\"./assemblyscript\");\n          } catch (e) {\n            throw Error(`${e_ts.stack}\\n---\\n${e.stack}`);\n          }\n        } else {\n          throw e_ts;\n        }\n      }\n    }\n  }\n  return exports;\n}\n\n// Loads the specified bootstrapped Wasm binary of the compiler.\nfunction loadAssemblyScriptWasm(binaryPath) {\n  const loader = require(\"../lib/loader/umd/index\");\n  const rtrace = new (require(\"../lib/rtrace/umd/index\").Rtrace)({\n    onerror(err, info) {\n      console.log(err, info);\n    },\n    getMemory() {\n      return exports.memory;\n    },\n    oncollect() {\n      var gcProfile = rtrace.gcProfile;\n      if (gcProfile && gcProfile.length && fs.writeFileSync) {\n        let timestamp = Date.now();\n        fs.writeFileSync(\n          `rtrace-gc-profile-${timestamp}.json`,\n          JSON.stringify(gcProfile)\n        );\n        fs.writeFileSync(\n          `rtrace-gc-profile-${timestamp}.csv`,\n          `time,memory,pause\\n${gcProfile.join(\"\\n\")}`\n        );\n      }\n    }\n  });\n  var { exports } = loader.instantiateSync(fs.readFileSync(binaryPath), rtrace.install({ binaryen }));\n  if (exports._start) exports._start();\n  return exports;\n}\n\n/** Ensures that an object is a wrapper class instead of just a pointer. */\nfunction __wrap(ptrOrObj, wrapperClass) {\n  if (typeof ptrOrObj === \"number\") {\n    return ptrOrObj === 0 ? null : wrapperClass.wrap(ptrOrObj);\n  }\n  return ptrOrObj;\n}\n\nvar assemblyscript, __newString, __getString, __pin, __unpin, __collect;\n\nfunction loadAssemblyScript() {\n  const wasmArg = process.argv.findIndex(arg => arg == \"--wasm\");\n  if (~wasmArg) {\n    let binaryPath = process.argv[wasmArg + 1];\n    process.argv.splice(wasmArg, 2);\n    assemblyscript = loadAssemblyScriptWasm(binaryPath);\n    __newString = assemblyscript.__newString;\n    __getString = assemblyscript.__getString;\n    __pin = assemblyscript.__pin;\n    __unpin = assemblyscript.__unpin;\n    __collect = assemblyscript.__collect;\n  } else {\n    assemblyscript = loadAssemblyScriptJS();\n    __newString = str => str;\n    __getString = ptr => ptr;\n    __pin = ptr => ptr;\n    __unpin = _ => undefined;\n    __collect = _ => undefined;\n  }\n}\nloadAssemblyScript();\n\n/** Whether this is a webpack bundle or not. */\nexports.isBundle = typeof BUNDLE_VERSION === \"string\";\n\n/** AssemblyScript version. */\nexports.version = exports.isBundle ? BUNDLE_VERSION : dynrequire(\"../package.json\").version;\n\n/** Available CLI options. */\nexports.options = require(\"./asc.json\");\n\n/** Prefix used for library files. */\nexports.libraryPrefix = __getString(assemblyscript.LIBRARY_PREFIX.valueOf());\n\n/** Default Binaryen optimization level. */\nexports.defaultOptimizeLevel = 3;\n\n/** Default Binaryen shrink level. */\nexports.defaultShrinkLevel = 0;\n\n/** Bundled library files. */\nexports.libraryFiles = exports.isBundle ? BUNDLE_LIBRARY : (() => { // set up if not a bundle\n  const libDir = path.join(__dirname, \"..\", \"std\", \"assembly\");\n  const bundled = {};\n  find\n    .files(libDir, defaultExtension.re_except_d)\n    .forEach(file => {\n      bundled[file.replace(defaultExtension.re, \"\")] = fs.readFileSync(path.join(libDir, file), \"utf8\");\n    });\n  return bundled;\n})();\n\n/** Bundled definition files. */\nexports.definitionFiles = exports.isBundle ? BUNDLE_DEFINITIONS : (() => { // set up if not a bundle\n  const readDefinition = name => fs.readFileSync(\n    path.join(__dirname, \"..\", \"std\", name, `index${defaultExtension.ext_d}`),\n    \"utf8\"\n  );\n  return {\n    assembly: readDefinition(\"assembly\"),\n    portable: readDefinition(\"portable\")\n  };\n})();\n\n/** Convenience function that parses and compiles source strings directly. */\nexports.compileString = (sources, options) => {\n  if (typeof sources === \"string\") sources = { [`input${defaultExtension.ext}`]: sources };\n  const output = Object.create({\n    stdout: createMemoryStream(),\n    stderr: createMemoryStream()\n  });\n  var argv = [\n    \"--binaryFile\", \"binary\",\n    \"--textFile\", \"text\",\n  ];\n  Object.keys(options || {}).forEach(key => {\n    var val = options[key];\n    var opt = exports.options[key];\n    if (opt && opt.type === \"b\") {\n      if (val) argv.push(`--${key}`);\n    } else {\n      if (Array.isArray(val)) {\n        val.forEach(val => { argv.push(`--${key}`, String(val)); });\n      }\n      else argv.push(`--${key}`, String(val));\n    }\n  });\n  exports.main(argv.concat(Object.keys(sources)), {\n    stdout: output.stdout,\n    stderr: output.stderr,\n    readFile: name => Object.prototype.hasOwnProperty.call(sources, name) ? sources[name] : null,\n    writeFile: (name, contents) => { output[name] = contents; },\n    listFiles: () => []\n  });\n  return output;\n};\n\n/** Runs the command line utility using the specified arguments array. */\nexports.main = function main(argv, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = {};\n  } else if (!options) {\n    options = {};\n  }\n\n  // Bundle semantic version\n  let bundleMinorVersion = 0, bundleMajorVersion = 0, bundlePatchVersion = 0;\n  const versionParts = (exports.version || \"\").split(\".\");\n  if (versionParts.length === 3) {\n    bundleMajorVersion = parseInt(versionParts[0]) | 0;\n    bundleMinorVersion = parseInt(versionParts[1]) | 0;\n    bundlePatchVersion = parseInt(versionParts[2]) | 0;\n  }\n\n  const stdout = options.stdout || process.stdout;\n  const stderr = options.stderr || process.stderr;\n  const readFile = options.readFile || readFileNode;\n  const writeFile = options.writeFile || writeFileNode;\n  const listFiles = options.listFiles || listFilesNode;\n  const stats = options.stats || createStats();\n  let extension = defaultExtension;\n\n  // Output must be specified if not present in the environment\n  if (!stdout) throw Error(\"'options.stdout' must be specified\");\n  if (!stderr) throw Error(\"'options.stderr' must be specified\");\n\n  // Parse command line options but do not populate option defaults yet\n  const optionsResult = optionsUtil.parse(argv, exports.options, false);\n  let opts = optionsResult.options;\n  argv = optionsResult.arguments;\n\n  if (opts.noColors) {\n    colorsUtil.stdout.supported =\n    colorsUtil.stderr.supported = false;\n  } else {\n    colorsUtil.stdout = colorsUtil.from(stdout);\n    colorsUtil.stderr = colorsUtil.from(stderr);\n  }\n\n  // Check for unknown options\n  const unknownOpts = optionsResult.unknown;\n  if (unknownOpts.length) {\n    unknownOpts.forEach(arg => {\n      stderr.write(\n        `${colorsUtil.stderr.yellow(\"WARNING \")}Unknown option '${arg}'%{EOL}`\n      );\n    });\n  }\n\n  // Check for trailing arguments\n  const trailingArgv = optionsResult.trailing;\n  if (trailingArgv.length) {\n    stderr.write(\n      `${colorsUtil.stderr.yellow(\"WARNING \")}Unsupported trailing arguments: ${trailingArgv.join(\" \")}${EOL}`\n    );\n  }\n\n  // Use default callback if none is provided\n  if (!callback) callback = function defaultCallback(err) {\n    var code = 0;\n    if (err) {\n      stderr.write(`${colorsUtil.stderr.red(\"FAILURE \")}${err.stack.replace(/^ERROR: /i, \"\")}${EOL}`);\n      code = 1;\n    }\n    return code;\n  };\n\n  // Just print the version if requested\n  if (opts.version) {\n    stdout.write(`Version ${exports.version}${EOL}`);\n    return callback(null);\n  }\n\n  // Use another extension if requested\n  if (typeof opts.extension === \"string\") {\n    if (/^\\.?[0-9a-zA-Z]{1,14}$/.test(opts.extension)) {\n      extension = setupExtension(opts.extension);\n    } else {\n      return callback(Error(`Invalid extension: ${opts.extension}`));\n    }\n  }\n\n  // Set up base directory\n  const baseDir = path.normalize(opts.baseDir || \".\");\n\n  // Check if a config file is present\n  let asconfigPath = optionsUtil.resolvePath(opts.config || \"asconfig.json\", baseDir);\n  let asconfigFile = path.basename(asconfigPath);\n  let asconfigDir = path.dirname(asconfigPath);\n  let asconfig = getAsconfig(asconfigFile, asconfigDir, readFile);\n  let asconfigHasEntries = asconfig != null && Array.isArray(asconfig.entries) && asconfig.entries.length;\n\n  // Print the help message if requested or no source files are provided\n  if (opts.help || (!argv.length && !asconfigHasEntries)) {\n    var out = opts.help ? stdout : stderr;\n    var color = opts.help ? colorsUtil.stdout : colorsUtil.stderr;\n    out.write([\n      color.white(\"SYNTAX\"),\n      \"  \" + color.cyan(\"asc\") + \" [entryFile ...] [options]\",\n      \"\",\n      color.white(\"EXAMPLES\"),\n      \"  \" + color.cyan(\"asc\") + \" hello\" + extension.ext,\n      \"  \" + color.cyan(\"asc\") + \" hello\" + extension.ext + \" -b hello.wasm -t hello.wat\",\n      \"  \" + color.cyan(\"asc\") + \" hello1\" + extension.ext + \" hello2\" + extension.ext + \" -b -O > hello.wasm\",\n      \"  \" + color.cyan(\"asc\") + \" --config asconfig.json --target release\",\n      \"\",\n      color.white(\"OPTIONS\"),\n    ].concat(\n      optionsUtil.help(exports.options, 24, EOL)\n    ).join(EOL) + EOL);\n    return callback(null);\n  }\n\n  // I/O must be specified if not present in the environment\n  if (!fs.readFileSync) {\n    if (readFile === readFileNode)   throw Error(\"'options.readFile' must be specified\");\n    if (writeFile === writeFileNode) throw Error(\"'options.writeFile' must be specified\");\n    if (listFiles === listFilesNode) throw Error(\"'options.listFiles' must be specified\");\n  }\n\n  // Load additional options from asconfig.json\n  const seenAsconfig = new Set();\n  seenAsconfig.add(asconfigPath);\n  const target = opts.target || \"release\";\n  while (asconfig) {\n    // Merge target first\n    if (asconfig.targets) {\n      const targetOptions = asconfig.targets[target];\n      if (targetOptions) {\n        opts = optionsUtil.merge(exports.options, opts, targetOptions, asconfigDir);\n      }\n    }\n    // Merge general options\n    const generalOptions = asconfig.options;\n    if (generalOptions) {\n      opts = optionsUtil.merge(exports.options, opts, generalOptions, asconfigDir);\n    }\n\n    // Append entries\n    if (asconfig.entries) {\n      for (let entry of asconfig.entries) {\n        argv.push(optionsUtil.resolvePath(entry, asconfigDir));\n      }\n    }\n\n    // Look up extended asconfig and repeat\n    if (asconfig.extends) {\n      asconfigPath = optionsUtil.resolvePath(asconfig.extends, asconfigDir, true);\n      asconfigFile = path.basename(asconfigPath);\n      asconfigDir = path.dirname(asconfigPath);\n      if (seenAsconfig.has(asconfigPath)) break;\n      seenAsconfig.add(asconfigPath);\n      asconfig = getAsconfig(asconfigFile, asconfigDir, readFile);\n    } else {\n      break;\n    }\n  }\n\n  // Populate option defaults once user-defined options are set\n  optionsUtil.addDefaults(exports.options, opts);\n\n  // If showConfig print options and exit\n  if (opts.showConfig) {\n    stderr.write(JSON.stringify({\n      options: opts,\n      entries: argv\n    }, null, 2));\n    return callback(null);\n  }\n\n  // create a unique set of values\n  function unique(values) {\n    return [...new Set(values)];\n  }\n\n  // Set up options\n  var program, runtime;\n  const compilerOptions = __pin(assemblyscript.newOptions());\n  switch (opts.runtime) {\n    case \"stub\": runtime = 0; break;\n    case \"minimal\": runtime = 1; break;\n    default: runtime = 2; break;\n  }\n  assemblyscript.setTarget(compilerOptions, 0);\n  assemblyscript.setRuntime(compilerOptions, runtime);\n  assemblyscript.setNoAssert(compilerOptions, opts.noAssert);\n  assemblyscript.setExportMemory(compilerOptions, !opts.noExportMemory);\n  assemblyscript.setImportMemory(compilerOptions, opts.importMemory);\n  assemblyscript.setInitialMemory(compilerOptions, opts.initialMemory >>> 0);\n  assemblyscript.setMaximumMemory(compilerOptions, opts.maximumMemory >>> 0);\n  assemblyscript.setSharedMemory(compilerOptions, opts.sharedMemory);\n  assemblyscript.setImportTable(compilerOptions, opts.importTable);\n  assemblyscript.setExportTable(compilerOptions, opts.exportTable);\n  assemblyscript.setExplicitStart(compilerOptions, opts.explicitStart);\n  assemblyscript.setMemoryBase(compilerOptions, opts.memoryBase >>> 0);\n  assemblyscript.setTableBase(compilerOptions, opts.tableBase >>> 0);\n  assemblyscript.setSourceMap(compilerOptions, opts.sourceMap != null);\n  assemblyscript.setNoUnsafe(compilerOptions, opts.noUnsafe);\n  assemblyscript.setPedantic(compilerOptions, opts.pedantic);\n  assemblyscript.setLowMemoryLimit(compilerOptions, opts.lowMemoryLimit >>> 0);\n  assemblyscript.setExportRuntime(compilerOptions, opts.exportRuntime);\n  assemblyscript.setBundleVersion(compilerOptions, bundleMajorVersion, bundleMinorVersion, bundlePatchVersion);\n  if (!opts.stackSize && opts.runtime == \"incremental\") {\n    opts.stackSize = assemblyscript.DEFAULT_STACK_SIZE;\n  }\n  assemblyscript.setStackSize(compilerOptions, opts.stackSize);\n\n  // Instrument callback to perform GC\n  callback = (function(callback) {\n    return function wrappedCallback(err) {\n      __unpin(compilerOptions);\n      if (program) __unpin(program);\n      __collect();\n      return callback(err);\n    };\n  })(callback);\n\n  // Add or override aliases if specified\n  if (opts.use) {\n    let aliases = opts.use;\n    for (let i = 0, k = aliases.length; i < k; ++i) {\n      let part = aliases[i];\n      let p = part.indexOf(\"=\");\n      if (p < 0) return callback(Error(`Global alias '${part}' is invalid.`));\n      let alias = part.substring(0, p).trim();\n      let name = part.substring(p + 1).trim();\n      if (!alias.length) {\n        return callback(Error(`Global alias '${part}' is invalid.`));\n      }\n      {\n        let aliasPtr = __pin(__newString(alias));\n        let namePtr = __newString(name);\n        assemblyscript.setGlobalAlias(compilerOptions, aliasPtr, namePtr);\n        __unpin(aliasPtr);\n      }\n    }\n  }\n\n  // Disable default features if specified\n  var features;\n  if ((features = opts.disable) != null) {\n    if (typeof features === \"string\") features = features.split(\",\");\n    for (let i = 0, k = features.length; i < k; ++i) {\n      let name = features[i].trim();\n      let flag = assemblyscript[`FEATURE_${toUpperSnakeCase(name)}`];\n      if (!flag) return callback(Error(`Feature '${name}' is unknown.`));\n      assemblyscript.disableFeature(compilerOptions, flag);\n    }\n  }\n\n  // Enable experimental features if specified\n  if ((features = opts.enable) != null) {\n    if (typeof features === \"string\") features = features.split(\",\");\n    for (let i = 0, k = features.length; i < k; ++i) {\n      let name = features[i].trim();\n      let flag = assemblyscript[`FEATURE_${toUpperSnakeCase(name)}`];\n      if (!flag) return callback(Error(`Feature '${name}' is unknown.`));\n      assemblyscript.enableFeature(compilerOptions, flag);\n    }\n  }\n\n  // Set up optimization levels\n  var optimizeLevel = 0;\n  var shrinkLevel = 0;\n  if (opts.optimize) {\n    optimizeLevel = exports.defaultOptimizeLevel;\n    shrinkLevel = exports.defaultShrinkLevel;\n  }\n  if (typeof opts.optimizeLevel === \"number\") optimizeLevel = opts.optimizeLevel;\n  if (typeof opts.shrinkLevel === \"number\") shrinkLevel = opts.shrinkLevel;\n  optimizeLevel = Math.min(Math.max(optimizeLevel, 0), 3);\n  shrinkLevel = Math.min(Math.max(shrinkLevel, 0), 2);\n  assemblyscript.setOptimizeLevelHints(compilerOptions, optimizeLevel, shrinkLevel);\n\n  // Initialize the program\n  program = __pin(assemblyscript.newProgram(compilerOptions));\n\n  // Collect transforms *constructors* from the `--transform` CLI flag as well\n  // as the `transform` option into the `transforms` array.\n  let transforms = [];\n  // `transform` option from `main()`\n  if (Array.isArray(options.transforms)) {\n    transforms.push(...options.transforms);\n  }\n  // `--transform` CLI flag\n  if (opts.transform) {\n    let tsNodeRegistered = false;\n    let transformArgs = unique(opts.transform);\n    for (let i = 0, k = transformArgs.length; i < k; ++i) {\n      let filename = transformArgs[i].trim();\n      if (!tsNodeRegistered && filename.endsWith(\".ts\")) { // ts-node requires .ts specifically\n        dynrequire(\"ts-node\").register({\n          transpileOnly: true,\n          skipProject: true,\n          compilerOptions: { target: \"ES2016\" }\n        });\n        tsNodeRegistered = true;\n      }\n      try {\n        transforms.push(dynrequire(dynrequire.resolve(filename, {\n          paths: [baseDir, process.cwd()]\n        })));\n      } catch (e) {\n        return callback(e);\n      }\n    }\n  }\n\n  // Fix up the prototype of the transforms’ constructors and instantiate them.\n  try {\n    transforms = transforms.map(classOrModule => {\n      // Except if it’s a legacy module, just pass it through.\n      if (typeof classOrModule !== \"function\") {\n        return classOrModule;\n      }\n      Object.assign(classOrModule.prototype, {\n        program,\n        baseDir,\n        stdout,\n        stderr,\n        log: console.error,\n        readFile,\n        writeFile,\n        listFiles\n      });\n      return new classOrModule();\n    });\n  } catch (e) {\n    return callback(e);\n  }\n\n  function applyTransform(name, ...args) {\n    for (let i = 0, k = transforms.length; i < k; ++i) {\n      let transform = transforms[i];\n      if (typeof transform[name] === \"function\") {\n        try {\n          stats.transformCount++;\n          stats.transfromTime += measure(() => {\n            transform[name](...args);\n          });\n        } catch (e) {\n          return e;\n        }\n      }\n    }\n  }\n\n  // Parse library files\n  Object.keys(exports.libraryFiles).forEach(libPath => {\n    if (libPath.includes(\"/\")) return; // in sub-directory: imported on demand\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      let textPtr = __pin(__newString(exports.libraryFiles[libPath]));\n      let pathPtr = __newString(exports.libraryPrefix + libPath + extension.ext);\n      assemblyscript.parse(program, textPtr, pathPtr, false);\n      __unpin(textPtr);\n    });\n  });\n  let customLibDirs = [];\n  if (opts.lib) {\n    let lib = opts.lib;\n    if (typeof lib === \"string\") lib = lib.split(\",\");\n    customLibDirs.push(...lib.map(p => p.trim()));\n    customLibDirs = unique(customLibDirs); // `lib` and `customLibDirs` may include duplicates\n    for (let i = 0, k = customLibDirs.length; i < k; ++i) { // custom\n      let libDir = customLibDirs[i];\n      let libFiles;\n      if (libDir.endsWith(extension.ext)) {\n        libFiles = [ path.basename(libDir) ];\n        libDir = path.dirname(libDir);\n      } else {\n        libFiles = listFiles(libDir, baseDir) || [];\n      }\n      for (let j = 0, l = libFiles.length; j < l; ++j) {\n        let libPath = libFiles[j];\n        let libText = readFile(libPath, libDir);\n        if (libText == null) {\n          return callback(Error(`Library file '${libPath}' not found.`));\n        }\n        stats.parseCount++;\n        exports.libraryFiles[libPath.replace(extension.re, \"\")] = libText;\n        stats.parseTime += measure(() => {\n          let textPtr = __pin(__newString(libText));\n          let pathPtr = __newString(exports.libraryPrefix + libPath);\n          assemblyscript.parse(program, textPtr, pathPtr, false);\n          __unpin(textPtr);\n        });\n      }\n    }\n  }\n  opts.path = opts.path || [];\n\n  // Maps package names to parent directory\n  const packageMains = new Map();\n  const packageBases = new Map();\n\n  // Gets the file matching the specified source path, imported at the given dependee path\n  function getFile(internalPath, dependeePath) {\n    var sourceText = null; // text reported back to the compiler\n    var sourcePath = null; // path reported back to the compiler\n\n    const libraryPrefix = exports.libraryPrefix;\n    const libraryFiles = exports.libraryFiles;\n\n    // Try file.ext, file/index.ext, file.d.ext\n    if (!internalPath.startsWith(libraryPrefix)) {\n      if ((sourceText = readFile(sourcePath = internalPath + extension.ext, baseDir)) == null) {\n        if ((sourceText = readFile(sourcePath = internalPath + \"/index\" + extension.ext, baseDir)) == null) {\n          // portable d.ext: uses the .js file next to it in JS or becomes an import in Wasm\n          sourcePath = internalPath + extension.ext;\n          sourceText = readFile(internalPath + extension.ext_d, baseDir);\n        }\n      }\n\n    // Search library in this order: stdlib, custom lib dirs, paths\n    } else {\n      const plainName = internalPath.substring(libraryPrefix.length);\n      const indexName = `${plainName}/index`;\n      if (Object.prototype.hasOwnProperty.call(libraryFiles, plainName)) {\n        sourceText = libraryFiles[plainName];\n        sourcePath = libraryPrefix + plainName + extension.ext;\n      } else if (Object.prototype.hasOwnProperty.call(libraryFiles, indexName)) {\n        sourceText = libraryFiles[indexName];\n        sourcePath = libraryPrefix + indexName + extension.ext;\n      } else { // custom lib dirs\n        for (const libDir of customLibDirs) {\n          if ((sourceText = readFile(plainName + extension.ext, libDir)) != null) {\n            sourcePath = libraryPrefix + plainName + extension.ext;\n            break;\n          } else {\n            if ((sourceText = readFile(indexName + extension.ext, libDir)) != null) {\n              sourcePath = libraryPrefix + indexName + extension.ext;\n              break;\n            }\n          }\n        }\n        if (sourceText == null) { // paths\n          const match = internalPath.match(/^~lib\\/((?:@[^/]+\\/)?[^/]+)(?:\\/(.+))?/); // ~lib/(pkg)/(path), ~lib/(@org/pkg)/(path)\n          if (match) {\n            const packageName = match[1];\n            const isPackageRoot = match[2] === undefined;\n            const filePath = isPackageRoot ? \"index\" : match[2];\n            const basePath = packageBases.has(dependeePath)\n              ? packageBases.get(dependeePath)\n              : \".\";\n\n            if (opts.traceResolution) {\n              stderr.write(`Looking for package '${packageName}' file '${filePath}' relative to '${basePath}'${EOL}`);\n            }\n            const paths = [];\n            const parts = path.resolve(baseDir, basePath).split(SEP);\n            for (let i = parts.length, k = WIN ? 1 : 0; i >= k; --i) {\n              if (parts[i - 1] !== \"node_modules\") {\n                paths.push(`${parts.slice(0, i).join(SEP)}${SEP}node_modules`);\n              }\n            }\n            for (const currentPath of paths.concat(...opts.path).map(p => path.relative(baseDir, p))) {\n              if (opts.traceResolution) {\n                stderr.write(`  in ${path.join(currentPath, packageName)}${EOL}`);\n              }\n              let mainPath = \"assembly\";\n              if (packageMains.has(packageName)) { // use cached\n                mainPath = packageMains.get(packageName);\n              } else { // evaluate package.json\n                let jsonPath = path.join(currentPath, packageName, \"package.json\");\n                let jsonText = readFile(jsonPath, baseDir);\n                if (jsonText != null) {\n                  try {\n                    let json = JSON.parse(jsonText);\n                    if (typeof json.ascMain === \"string\") {\n                      mainPath = json.ascMain.replace(extension.re_index, \"\");\n                      packageMains.set(packageName, mainPath);\n                    }\n                  } catch (e) { /* nop */ }\n                }\n              }\n              const mainDir = path.join(currentPath, packageName, mainPath);\n              const plainName = filePath;\n              if ((sourceText = readFile(path.join(mainDir, plainName + extension.ext), baseDir)) != null) {\n                sourcePath = `${libraryPrefix}${packageName}/${plainName}${extension.ext}`;\n                packageBases.set(sourcePath.replace(extension.re, \"\"), path.join(currentPath, packageName));\n                if (opts.traceResolution) {\n                  stderr.write(`  -> ${path.join(mainDir, plainName + extension.ext)}${EOL}`);\n                }\n                break;\n              } else if (!isPackageRoot) {\n                const indexName = `${filePath}/index`;\n                if ((sourceText = readFile(path.join(mainDir, indexName + extension.ext), baseDir)) !== null) {\n                  sourcePath = `${libraryPrefix}${packageName}/${indexName}${extension.ext}`;\n                  packageBases.set(sourcePath.replace(extension.re, \"\"), path.join(currentPath, packageName));\n                  if (opts.traceResolution) {\n                    stderr.write(`  -> ${path.join(mainDir, indexName + extension.ext)}${EOL}`);\n                  }\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    // No such file\n    if (sourceText == null) return null;\n    return { sourceText, sourcePath };\n  }\n\n  // Parses the backlog of imported files after including entry files\n  function parseBacklog() {\n    var internalPath;\n    while ((internalPath = __getString(assemblyscript.nextFile(program)))) {\n      let file = getFile(internalPath, assemblyscript.getDependee(program, internalPath));\n      if (file) {\n        stats.parseCount++;\n        stats.parseTime += measure(() => {\n          let textPtr = __pin(__newString(file.sourceText));\n          let pathPtr = __newString(file.sourcePath);\n          assemblyscript.parse(program, textPtr, pathPtr, false);\n          __unpin(textPtr);\n        });\n      } else {\n        stats.parseTime += measure(() => {\n          let textPtr = __newString(null); // no need to pin\n          let pathPtr = __newString(internalPath + extension.ext);\n          assemblyscript.parse(program, textPtr, pathPtr, false);\n        });\n      }\n    }\n    var numErrors = checkDiagnostics(program, stderr, options.reportDiagnostic);\n    if (numErrors) {\n      const err = Error(`${numErrors} parse error(s)`);\n      err.stack = err.message; // omit stack\n      return callback(err);\n    }\n  }\n\n  // Include runtime before entry files so its setup runs first\n  {\n    let runtimeName = String(opts.runtime);\n    let runtimePath = `rt/index-${runtimeName}`;\n    let runtimeText = exports.libraryFiles[runtimePath];\n    if (runtimeText == null) {\n      runtimePath = runtimeName;\n      runtimeText = readFile(runtimePath + extension.ext, baseDir);\n      if (runtimeText == null) return callback(Error(`Runtime '${runtimeName}' not found.`));\n    } else {\n      runtimePath = `~lib/${runtimePath}`;\n    }\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      let textPtr = __pin(__newString(runtimeText));\n      let pathPtr = __newString(runtimePath + extension.ext);\n      assemblyscript.parse(program, textPtr, pathPtr, true);\n      __unpin(textPtr);\n    });\n  }\n\n  // Include entry files\n  for (let i = 0, k = argv.length; i < k; ++i) {\n    const filename = argv[i];\n    let sourcePath = String(filename)\n      .replace(/\\\\/g, \"/\")\n      .replace(extension.re, \"\")\n      .replace(/[\\\\/]$/, \"\");\n\n    // Setting the path to relative path\n    sourcePath = path.isAbsolute(sourcePath)\n      ? path.relative(baseDir, sourcePath).replace(/\\\\/g, \"/\")\n      : sourcePath;\n\n    // Try entryPath.ext, then entryPath/index.ext\n    let sourceText = readFile(sourcePath + extension.ext, baseDir);\n    if (sourceText == null) {\n      const path = `${sourcePath}/index${extension.ext}`;\n      sourceText = readFile(path, baseDir);\n      if (sourceText != null) sourcePath = path;\n      else sourcePath += extension.ext;\n    } else {\n      sourcePath += extension.ext;\n    }\n\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      let textPtr = __pin(__newString(sourceText));\n      let pathPtr = __newString(sourcePath);\n      assemblyscript.parse(program, textPtr, pathPtr, true);\n      __unpin(textPtr);\n    });\n  }\n\n  // Parse entry files\n  {\n    let code = parseBacklog();\n    if (code) return code;\n  }\n\n  // Call afterParse transform hook\n  {\n    let error = applyTransform(\"afterParse\", program.parser);\n    if (error) return callback(error);\n  }\n\n  // Parse additional files, if any\n  {\n    let code = parseBacklog();\n    if (code) return code;\n  }\n\n  // Print files and exit if listFiles\n  if (opts.listFiles) {\n    // FIXME: not a proper C-like API\n    stderr.write(program.sources.map(s => s.normalizedPath).sort().join(EOL) + EOL);\n    return callback(null);\n  }\n\n  // Pre-emptively initialize the program\n  stats.initializeCount++;\n  stats.initializeTime += measure(() => {\n    try {\n      assemblyscript.initializeProgram(program);\n    } catch (e) {\n      crash(\"initialize\", e);\n    }\n  });\n\n  // Call afterInitialize transform hook\n  {\n    let error = applyTransform(\"afterInitialize\", program);\n    if (error) return callback(error);\n  }\n\n  var module;\n  stats.compileCount++;\n  stats.compileTime += measure(() => {\n    try {\n      module = assemblyscript.compile(program);\n    } catch (e) {\n      crash(\"compile\", e);\n    }\n    // From here on we are going to use Binaryen.js, except that we keep pass\n    // order as defined in the compiler.\n    if (typeof module === \"number\") { // Wasm\n      const original = assemblyscript.Module.wrap(module);\n      module = binaryen.wrapModule(original.ref);\n      module.optimize = function(...args) {\n        original.optimize(...args);\n      };\n    } else { // JS\n      const original = module;\n      module = binaryen.wrapModule(module.ref);\n      module.optimize = function(...args) {\n        original.optimize(...args);\n      };\n    }\n  });\n  var numErrors = checkDiagnostics(program, stderr, options.reportDiagnostic);\n  if (numErrors) {\n    if (module) module.dispose();\n    const err = Error(`${numErrors} compile error(s)`);\n    err.stack = err.message; // omit stack\n    return callback(err);\n  }\n\n  // Call afterCompile transform hook\n  {\n    let error = applyTransform(\"afterCompile\", module);\n    if (error) return callback(error);\n  }\n\n  numErrors = checkDiagnostics(program, stderr, options.reportDiagnostic);\n  if (numErrors) {\n    if (module) module.dispose();\n    const err = Error(`${numErrors} afterCompile error(s)`);\n    err.stack = err.message; // omit stack\n    return callback(err);\n  }\n\n  // Validate the module if requested\n  if (!opts.noValidate) {\n    stats.validateCount++;\n    let isValid;\n    stats.validateTime += measure(() => {\n      isValid = module.validate();\n    });\n    if (!isValid) {\n      module.dispose();\n      return callback(Error(\"validate error\"));\n    }\n  }\n\n  // Set Binaryen-specific options\n  if (opts.trapMode === \"clamp\" || opts.trapMode === \"js\") {\n    stats.optimizeCount++;\n    stats.optimizeTime += measure(() => {\n      try {\n        module.runPasses([`trap-mode-${opts.trapMode}`]);\n      } catch (e) {\n        crash(\"runPasses\", e);\n      }\n    });\n  } else if (opts.trapMode !== \"allow\") {\n    module.dispose();\n    return callback(Error(\"Unsupported trap mode\"));\n  }\n\n  // Optimize the module\n  const debugInfo = opts.debug;\n  const converge = opts.converge;\n  const zeroFilledMemory = opts.importMemory\n    ? opts.zeroFilledMemory\n    : false;\n\n  const runPasses = [];\n  if (opts.runPasses) {\n    if (typeof opts.runPasses === \"string\") {\n      opts.runPasses = opts.runPasses.split(\",\");\n    }\n    if (opts.runPasses.length) {\n      opts.runPasses.forEach(pass => {\n        if (!runPasses.includes(pass = pass.trim())) {\n          runPasses.push(pass);\n        }\n      });\n    }\n  }\n\n  stats.optimizeTime += measure(() => {\n    stats.optimizeCount++;\n    try {\n      module.optimize(optimizeLevel, shrinkLevel, debugInfo, zeroFilledMemory);\n    } catch (e) {\n      crash(\"optimize\", e);\n    }\n    try {\n      module.runPasses(runPasses);\n    } catch (e) {\n      crash(\"runPasses\", e);\n    }\n    if (converge) {\n      let last;\n      try {\n        last = module.emitBinary();\n      } catch (e) {\n        crash(\"emitBinary (converge)\", e);\n      }\n      do {\n        stats.optimizeCount++;\n        try {\n          module.optimize(optimizeLevel, shrinkLevel, debugInfo, zeroFilledMemory);\n        } catch (e) {\n          crash(\"optimize (converge)\", e);\n        }\n        try {\n          module.runPasses(runPasses);\n        } catch (e) {\n          crash(\"runPasses (converge)\", e);\n        }\n        let next;\n        try {\n          next = module.emitBinary();\n        } catch (e) {\n          crash(\"emitBinary (converge)\", e);\n        }\n        if (next.length >= last.length) {\n          if (next.length > last.length) {\n            stderr.write(`Last converge was suboptimial.${EOL}`);\n          }\n          break;\n        }\n        last = next;\n      } while (true);\n    }\n  });\n\n  // Prepare output\n  if (!opts.noEmit) {\n    if (opts.outFile != null) {\n      if (opts.textFile == null && /\\.was?t$/.test(opts.outFile)) {\n        opts.textFile = opts.outFile;\n      } else if (opts.jsFile == null && /\\.js$/.test(opts.outFile)) {\n        opts.jsFile = opts.outFile;\n      } else if (opts.binaryFile == null) {\n        opts.binaryFile = opts.outFile;\n      }\n    }\n\n    let hasStdout = false;\n    let hasOutput = opts.textFile != null\n                 || opts.binaryFile != null\n                 || opts.jsFile != null\n                 || opts.tsdFile != null\n                 || opts.idlFile != null;\n\n    // Write binary\n    if (opts.binaryFile != null) {\n      let basename = path.basename(opts.binaryFile);\n      let sourceMapURL = opts.sourceMap != null\n        ? opts.sourceMap.length\n          ? opts.sourceMap\n          : `./${basename}.map`\n        : null;\n\n      let wasm;\n      stats.emitCount++;\n      stats.emitTime += measure(() => {\n        try {\n          wasm = module.emitBinary(sourceMapURL);\n        } catch (e) {\n          crash(\"emitBinary\", e);\n        }\n      });\n\n      if (opts.binaryFile.length) {\n        writeFile(opts.binaryFile, wasm.binary, baseDir);\n      } else {\n        writeStdout(wasm.binary);\n        hasStdout = true;\n      }\n\n      // Post-process source map\n      if (wasm.sourceMap != \"\") {\n        if (opts.binaryFile.length) {\n          let map = JSON.parse(wasm.sourceMap);\n          map.sourceRoot = `./${basename}`;\n          let contents = [];\n          map.sources.forEach((name, index) => {\n            let text = assemblyscript.getSource(program, __newString(name.replace(extension.re, \"\")));\n            if (text == null) return callback(Error(`Source of file '${name}' not found.`));\n            contents[index] = text;\n          });\n          map.sourcesContent = contents;\n          writeFile(path.join(\n            path.dirname(opts.binaryFile),\n            path.basename(sourceMapURL)\n          ).replace(/^\\.\\//, \"\"), JSON.stringify(map), baseDir);\n        } else {\n          stderr.write(`Skipped source map (stdout already occupied)${EOL}`);\n        }\n      }\n    }\n\n    // Write text (also fallback)\n    if (opts.textFile != null || !hasOutput) {\n      let out;\n      if (opts.textFile != null && opts.textFile.length) {\n        // use superset text format when extension is `.wast`.\n        // Otherwise use official stack IR format (wat).\n        let wastFormat = opts.textFile.endsWith(\".wast\");\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          try {\n            out = wastFormat\n              ? module.emitText()\n              : module.emitStackIR(true);\n          } catch (e) {\n            crash(\"emitText\", e);\n          }\n        });\n        writeFile(opts.textFile, out, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          try {\n            out = module.emitStackIR(true);\n          } catch (e) {\n            crash(\"emitText\", e);\n          }\n        });\n        writeStdout(out);\n      }\n    }\n\n    // Write WebIDL\n    if (opts.idlFile != null) {\n      let idl;\n      if (opts.idlFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          try {\n            idl = assemblyscript.buildIDL(program);\n          } catch (e) {\n            crash(\"buildIDL\", e);\n          }\n        });\n        writeFile(opts.idlFile, __getString(idl), baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          try {\n            idl = assemblyscript.buildIDL(program);\n          } catch (e) {\n            crash(\"buildIDL\", e);\n          }\n        });\n        writeStdout(__getString(idl));\n        hasStdout = true;\n      }\n    }\n\n    // Write TypeScript definition\n    if (opts.tsdFile != null) {\n      let tsd;\n      if (opts.tsdFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          try {\n            tsd = assemblyscript.buildTSD(program);\n          } catch (e) {\n            crash(\"buildTSD\", e);\n          }\n        });\n        writeFile(opts.tsdFile, __getString(tsd), baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          try {\n            tsd = assemblyscript.buildTSD(program);\n          } catch (e) {\n            crash(\"buildTSD\", e);\n          }\n        });\n        writeStdout(__getString(tsd));\n        hasStdout = true;\n      }\n    }\n\n    // Write JS (modifies the binary, so must be last)\n    if (opts.jsFile != null) {\n      let js;\n      if (opts.jsFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          try {\n            js = module.emitAsmjs();\n          } catch (e) {\n            crash(\"emitJS\", e);\n          }\n        });\n        writeFile(opts.jsFile, js, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          try {\n            js = module.emitAsmjs();\n          } catch (e) {\n            crash(\"emitJS\", e);\n          }\n        });\n        writeStdout(js);\n      }\n    }\n  }\n\n  module.dispose();\n  if (opts.measure) {\n    printStats(stats, stderr);\n  }\n\n  return callback(null);\n\n  function readFileNode(filename, baseDir) {\n    let name = path.resolve(baseDir, filename);\n    try {\n      let text;\n      stats.readCount++;\n      stats.readTime += measure(() => {\n        text = fs.readFileSync(name, \"utf8\");\n      });\n      return text;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  function writeFileNode(filename, contents, baseDir) {\n    try {\n      stats.writeCount++;\n      stats.writeTime += measure(() => {\n        const dirPath = path.resolve(baseDir, path.dirname(filename));\n        filename = path.basename(filename);\n        const outputFilePath = path.join(dirPath, filename);\n        if (!fs.existsSync(dirPath)) mkdirp(dirPath);\n        fs.writeFileSync(outputFilePath, contents);\n      });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function listFilesNode(dirname, baseDir) {\n    var files;\n    try {\n      stats.readCount++;\n      stats.readTime += measure(() => {\n        files = fs.readdirSync(path.join(baseDir, dirname))\n          .filter(file => extension.re_except_d.test(file));\n      });\n      return files;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  function writeStdout(contents) {\n    if (!writeStdout.used) {\n      stats.writeCount++;\n      writeStdout.used = true;\n    }\n    stats.writeTime += measure(() => {\n      stdout.write(contents);\n    });\n  }\n};\n\nconst toString = Object.prototype.toString;\n\nfunction isObject(arg) {\n  return toString.call(arg) === \"[object Object]\";\n}\n\nfunction getAsconfig(file, baseDir, readFile) {\n  const contents = readFile(file, baseDir);\n  const location = path.join(baseDir, file);\n  if (!contents) return null;\n\n  // obtain the configuration\n  let config;\n  try {\n    config = JSON.parse(contents);\n  } catch(ex) {\n    throw new Error(`Asconfig is not valid json: ${location}`);\n  }\n\n  // validate asconfig shape\n  if (config.options && !isObject(config.options)) {\n    throw new Error(`Asconfig.options is not an object: ${location}`);\n  }\n\n  if (config.include && !Array.isArray(config.include)) {\n    throw new Error(`Asconfig.include is not an array: ${location}`);\n  }\n\n  if (config.targets) {\n    if (!isObject(config.targets)) {\n      throw new Error(`Asconfig.targets is not an object: ${location}`);\n    }\n    const targets = Object.keys(config.targets);\n    for (let i = 0; i < targets.length; i++) {\n      const target = targets[i];\n      if (!isObject(config.targets[target])) {\n        throw new Error(`Asconfig.targets.${target} is not an object: ${location}`);\n      }\n    }\n  }\n\n  if (config.extends && typeof config.extends !== \"string\") {\n    throw new Error(`Asconfig.extends is not a string: ${location}`);\n  }\n\n  return config;\n}\n\nexports.getAsconfig = getAsconfig;\n\n/** Checks diagnostics emitted so far for errors. */\nfunction checkDiagnostics(program, stderr, reportDiagnostic) {\n  var numErrors = 0;\n  do {\n    let diagnosticPtr = assemblyscript.nextDiagnostic(program);\n    if (!diagnosticPtr) break;\n    __pin(diagnosticPtr);\n    if (stderr) {\n      stderr.write(\n        __getString(assemblyscript.formatDiagnostic(diagnosticPtr, stderr.isTTY, true)) +\n        EOL + EOL\n      );\n    }\n    if (reportDiagnostic) {\n      const diagnostic = __wrap(diagnosticPtr, assemblyscript.DiagnosticMessage);\n      const range = __wrap(diagnostic.range, assemblyscript.Range);\n      const relatedRange = __wrap(diagnostic.relatedRange, assemblyscript.Range);\n      const rangeSource = range ? __wrap(range.source, assemblyscript.Source) : null;\n      const relatedRangeSource = relatedRange ? __wrap(relatedRange.source, assemblyscript.Source) : null;\n\n      reportDiagnostic({\n        message: __getString(diagnostic.message),\n        code: diagnostic.code,\n        category: diagnostic.category,\n        range: range ? {\n          start: range.start,\n          end: range.end,\n          source: rangeSource ? {\n            normalizedPath: __getString(rangeSource.normalizedPath)\n          } : null,\n        } : null,\n        relatedRange: relatedRange ? {\n          start: relatedRange.start,\n          end: relatedRange.end,\n          source: relatedRangeSource ? {\n            normalizedPath: __getString(relatedRangeSource.normalizedPath)\n          } : null\n        } : null\n      });\n    }\n    if (assemblyscript.isError(diagnosticPtr)) ++numErrors;\n    __unpin(diagnosticPtr);\n  } while (true);\n  return numErrors;\n}\n\nexports.checkDiagnostics = checkDiagnostics;\n\n/** Creates an empty set of stats. */\nfunction createStats() {\n  return {\n    readTime: 0,\n    readCount: 0,\n    writeTime: 0,\n    writeCount: 0,\n    parseTime: 0,\n    parseCount: 0,\n    initializeTime: 0,\n    initializeCount: 0,\n    compileTime: 0,\n    compileCount: 0,\n    emitTime: 0,\n    emitCount: 0,\n    validateTime: 0,\n    validateCount: 0,\n    optimizeTime: 0,\n    optimizeCount: 0,\n    transformTime: 0,\n    transformCount: 0\n  };\n}\n\nexports.createStats = createStats;\n\n/** Measures the execution time of the specified function.  */\nfunction measure(fn) {\n  const start = process.hrtime();\n  fn();\n  const times = process.hrtime(start);\n  return times[0] * 1e9 + times[1];\n}\n\nexports.measure = measure;\n\nfunction pad(str, len) {\n  while (str.length < len) str = ` ${str}`;\n  return str;\n}\n\n/** Formats a high resolution time to a human readable string. */\nfunction formatTime(time) {\n  return time ? `${(time / 1e6).toFixed(3)} ms` : \"n/a\";\n}\n\nexports.formatTime = formatTime;\n\n/** Formats and prints out the contents of a set of stats. */\nfunction printStats(stats, output) {\n  const format = (time, count) => `${pad(formatTime(time), 12)}  n=${count}`;\n  (output || process.stdout).write([\n    \"I/O Read   : \" + format(stats.readTime, stats.readCount),\n    \"I/O Write  : \" + format(stats.writeTime, stats.writeCount),\n    \"Parse      : \" + format(stats.parseTime, stats.parseCount),\n    \"Initialize : \" + format(stats.initializeTime, stats.initializeCount),\n    \"Compile    : \" + format(stats.compileTime, stats.compileCount),\n    \"Emit       : \" + format(stats.emitTime, stats.emitCount),\n    \"Validate   : \" + format(stats.validateTime, stats.validateCount),\n    \"Optimize   : \" + format(stats.optimizeTime, stats.optimizeCount),\n    \"Transform  : \" + format(stats.transformTime, stats.transformCount),\n    \"\"\n  ].join(EOL) + EOL);\n}\n\nexports.printStats = printStats;\n\nvar allocBuffer = typeof global !== \"undefined\" && global.Buffer\n  ? global.Buffer.allocUnsafe || (len => new global.Buffer(len))\n  : len => new Uint8Array(len);\n\n/** Creates a memory stream that can be used in place of stdout/stderr. */\nfunction createMemoryStream(fn) {\n  var stream = [];\n  stream.write = function(chunk) {\n    if (fn) fn(chunk);\n    if (typeof chunk === \"string\") {\n      let buffer = allocBuffer(utf8.length(chunk));\n      utf8.write(chunk, buffer, 0);\n      chunk = buffer;\n    }\n    this.push(chunk);\n  };\n  stream.reset = function() {\n    stream.length = 0;\n  };\n  stream.toBuffer = function() {\n    var offset = 0, i = 0, k = this.length;\n    while (i < k) offset += this[i++].length;\n    var buffer = allocBuffer(offset);\n    offset = i = 0;\n    while (i < k) {\n      buffer.set(this[i], offset);\n      offset += this[i].length;\n      ++i;\n    }\n    return buffer;\n  };\n  stream.toString = function() {\n    var buffer = this.toBuffer();\n    return utf8.read(buffer, 0, buffer.length);\n  };\n  return stream;\n}\n\nexports.createMemoryStream = createMemoryStream;\n\n/** Compatible TypeScript compiler options for syntax highlighting etc. */\nexports.tscOptions = {\n  alwaysStrict: true,\n  noImplicitAny: true,\n  noImplicitReturns: true,\n  noImplicitThis: true,\n  noEmitOnError: true,\n  strictNullChecks: true,\n  experimentalDecorators: true,\n  target: \"esnext\",\n  module: \"commonjs\",\n  noLib: true,\n  types: [],\n  allowJs: false\n};\n\n// Gracefully handle crashes\nfunction crash(stage, e) {\n  const BAR = colorsUtil.red(\"▌ \");\n  console.error([\n    EOL,\n    BAR, \"Whoops, the AssemblyScript compiler has crashed during \", stage, \" :-(\", EOL,\n    BAR, EOL,\n    (typeof e.stack === \"string\"\n      ? [\n          BAR, \"Here is the stack trace hinting at the problem, perhaps it's useful?\", EOL,\n          BAR, EOL,\n          e.stack.replace(/^/mg, BAR), EOL,\n          BAR, EOL,\n          BAR, \"If it refers to the dist files, try to 'npm install source-map-support' and\", EOL,\n          BAR, \"run again, which should then show the actual code location in the sources.\", EOL,\n        ]\n      : [\n          BAR, \"There is no stack trace. Perhaps a Binaryen exception above / in console?\", EOL,\n          BAR, EOL,\n          BAR, \"> \" + e.stack, EOL\n        ]\n    ).join(\"\"),\n    BAR, EOL,\n    BAR, \"If you see where the error is, feel free to send us a pull request. If not,\", EOL,\n    BAR, \"please let us know: https://github.com/AssemblyScript/assemblyscript/issues\", EOL,\n    BAR, EOL,\n    BAR, \"Thank you!\", EOL\n  ].join(\"\"));\n  process.exit(1);\n}\n","module.exports = {};\n","const process = require(\"process\"); // ensure shim\n\n// https://github.com/browserify/path-browserify v1.0.1\n//\n// Copyright (c) 2013 James Halliday\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 || res.charCodeAt(res.length - 2) !== 46) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    if (from === \".\") return to; // FIX for 'odule.ts' (see issue #1398)\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","module.exports = {\n  platform: \"linux\",\n  cwd() {\n    return \".\";\n  },\n  umask() {\n    return 0;\n  },\n  hrtime,\n  argv: [],\n  exit(code = 0) {\n    throw Error(`exit ${code}`);\n  }\n};\n\n// https://github.com/kumavis/browser-process-hrtime v1.0.0\n//\n// Copyright 2014 kumavis\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// 1. Redistributions of source code must retain the above copyright notice,\n// this list of conditions and the following disclaimer.\n//\n// 2. Redistributions in binary form must reproduce the above copyright notice,\n// this list of conditions and the following disclaimer in the documentation\n// and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nvar performance = global.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime(); };\n\nfunction hrtime(previousTimestamp) {\n  var clocktime = performanceNow.call(performance);\n  var seconds = Math.floor(clocktime * 1e-3);\n  var nanoseconds = Math.floor(clocktime * 1e6 - seconds * 1e9);\n  if (previousTimestamp) {\n    seconds -= previousTimestamp[0];\n    nanoseconds -= previousTimestamp[1];\n    if (nanoseconds < 0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [ seconds, nanoseconds ];\n}\n","/**\n * @fileoverview Terminal colors utility.\n * @license Apache-2.0\n */\n\nvar proc = typeof process !== \"undefined\" && process || {};\nvar isCI = proc.env && \"CI\" in proc.env; // doesn't work when bundled because 'process' is a mock\n\nfunction from(stream, base) {\n  var colors = base || {};\n  colors.supported = (stream && !!stream.isTTY) || isCI;\n  colors.gray = text => colors.supported ? exports.GRAY + text + exports.RESET : text;\n  colors.red = text => colors.supported ? exports.RED + text + exports.RESET : text;\n  colors.green = text => colors.supported ? exports.GREEN + text + exports.RESET : text;\n  colors.yellow = text => colors.supported ? exports.YELLOW + text + exports.RESET : text;\n  colors.blue = text => colors.supported ? exports.BLUE + text + exports.RESET : text;\n  colors.magenta = text => colors.supported ? exports.MAGENTA + text + exports.RESET : text;\n  colors.cyan = text => colors.supported ? exports.CYAN + text + exports.RESET : text;\n  colors.white = text => colors.supported ? exports.WHITE + text + exports.RESET : text;\n  return colors;\n}\n\nexports.stdout = from(proc.stdout, exports);\nexports.stderr = from(proc.stderr);\nexports.from = from;\n\nexports.GRAY = \"\\u001b[90m\";\nexports.RED = \"\\u001b[91m\";\nexports.GREEN = \"\\u001b[92m\";\nexports.YELLOW = \"\\u001b[93m\";\nexports.BLUE = \"\\u001b[94m\";\nexports.MAGENTA = \"\\u001b[95m\";\nexports.CYAN = \"\\u001b[96m\";\nexports.WHITE = \"\\u001b[97m\";\nexports.RESET = \"\\u001b[0m\";\n","/**\n * @fileoverview File finding utility.\n * @license Apache-2.0\n */\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\nfunction findFiles(dirname, filter) {\n  var out = [];\n  fs.readdirSync(dirname).forEach(name => {\n    if (fs.statSync(path.join(dirname, name)).isDirectory()) {\n      findFiles(path.join(dirname, name), filter).forEach(iname => out.push(name + \"/\" + iname));\n    } else if (!filter || typeof filter === \"function\" ? filter(name) : filter.test(name)) {\n      out.push(name);\n    }\n  });\n  return out;\n}\n\nexports.files = findFiles;\n","/**\n * @fileoverview Recursive mkdir.\n * @license\n * Copyright 2010 James Halliday (mail@substack.net)\n *\n * This project is free software released under the MIT/X11 license:\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nconst process = require(\"process\"); // ensure shim\n\nmodule.exports = function mkdirp(p, opts, made) {\n  if (!opts || typeof opts !== \"object\") {\n    opts = { mode: opts };\n  }\n  var mode = opts.mode;\n  if (mode === undefined) {\n    mode = 0o777 & (~process.umask());\n  }\n  if (!made) made = null;\n  p = path.resolve(p);\n  try {\n    fs.mkdirSync(p, mode);\n    made = made || p;\n  } catch (err0) {\n    switch (err0.code) {\n      case \"ENOENT\":\n        made = mkdirp(path.dirname(p), opts, made);\n        mkdirp(p, opts, made);\n        break;\n      default:\n        var stat;\n        try {\n          stat = fs.statSync(p);\n        } catch (err1) {\n          throw err0;\n        }\n        if (!stat.isDirectory()) throw err0;\n        break;\n    }\n  }\n  return made;\n};\n","/**\n * @fileoverview Command line options utility.\n * @license Apache-2.0\n */\n\nconst path = require(\"path\");\nconst colorsUtil = require(\"./colors\");\n\n// type | meaning\n// -----|---------------\n// b    | boolean\n// i    | integer\n// f    | float\n// s    | string\n// I    | integer array\n// F    | float array\n// S    | string array\n\n/** Parses the specified command line arguments according to the given configuration. */\nfunction parse(argv, config, propagateDefaults = true) {\n  var options = {};\n  var unknown = [];\n  var args = [];\n  var trailing = [];\n\n  // make an alias map and initialize defaults\n  var aliases = {};\n  Object.keys(config).forEach(key => {\n    if (key.startsWith(\" \")) return;\n    var option = config[key];\n    if (option.alias != null) {\n      if (typeof option.alias === \"string\") aliases[option.alias] = key;\n      else if (Array.isArray(option.alias)) option.alias.forEach(alias => aliases[alias] = key);\n    }\n    if (propagateDefaults && option.default != null) options[key] = option.default;\n  });\n\n  // iterate over argv\n  for (var i = 0, k = (argv = argv.slice()).length; i < k; ++i) {\n    let arg = argv[i];\n    if (arg == \"--\") { ++i; break; }\n    let match = /^(?:(-\\w)(?:=(.*))?|(--\\w{2,})(?:=(.*))?)$/.exec(arg), option, key;\n    if (match) {\n      if (config[arg]) option = config[key = arg]; // exact\n      else if (match[1] != null) { // alias\n        option = config[key = aliases[match[1].substring(1)]];\n        if (option && match[2] != null) argv[i--] = match[2];\n      } else if (match[3] != null) { // full\n        option = config[key = match[3].substring(2)];\n        if (option && match[4] != null) argv[i--] = match[4];\n      }\n    } else {\n      if (arg.charCodeAt(0) == 45) option = config[key = arg]; // exact\n      else { args.push(arg); continue; } // argument\n    }\n    if (option) {\n      if (option.value) {\n        // alias setting fixed values\n        Object.keys(option.value).forEach(k => options[k] = option.value[k]);\n      } else if (option.type == null || option.type === \"b\") {\n        // boolean flag not taking a value\n        options[key] = true;\n      } else {\n        if (i + 1 < argv.length && argv[i + 1].charCodeAt(0) != 45) {\n          // non-boolean with given value\n          switch (option.type) {\n            case \"i\": options[key] = parseInt(argv[++i], 10); break;\n            case \"I\": options[key] = (options[key] || []).concat(parseInt(argv[++i], 10)); break;\n            case \"f\": options[key] = parseFloat(argv[++i]); break;\n            case \"F\": options[key] = (options[key] || []).concat(parseFloat(argv[++i])); break;\n            case \"s\": options[key] = String(argv[++i]); break;\n            case \"S\": options[key] = (options[key] || []).concat(argv[++i].split(\",\")); break;\n            default: unknown.push(arg); --i;\n          }\n        } else {\n          // non-boolean with omitted value\n          switch (option.type) {\n            case \"i\":\n            case \"f\": options[key] = option.default || 0; break;\n            case \"s\": options[key] = option.default || \"\"; break;\n            case \"I\":\n            case \"F\":\n            case \"S\": options[key] = option.default || []; break;\n            default: unknown.push(arg);\n          }\n        }\n      }\n    } else unknown.push(arg);\n  }\n  while (i < k) trailing.push(argv[i++]); // trailing\n  if (propagateDefaults) addDefaults(config, options);\n\n  return { options, unknown, arguments: args, trailing };\n}\n\nexports.parse = parse;\n\n/** Generates the help text for the specified configuration. */\nfunction help(config, options) {\n  if (!options) options = {};\n  var indent = options.indent || 2;\n  var padding = options.padding || 24;\n  var eol = options.eol || \"\\n\";\n  var sbCategories = {};\n  var sbOther = [];\n  Object.keys(config).forEach(key => {\n    var option = config[key];\n    if (option.description == null) return;\n    var text = \"\";\n    while (text.length < indent) text += \" \";\n    text += \"--\" + key;\n    if (option.alias) text += \", -\" + option.alias;\n    while (text.length < padding) text += \" \";\n    var sb;\n    if (!options.noCategories && option.category) {\n      if (!(sb = sbCategories[option.category])) {\n        sbCategories[option.category] = sb = [];\n      }\n    } else {\n      sb = sbOther;\n    }\n    if (Array.isArray(option.description)) {\n      sb.push(text + option.description[0] + option.description.slice(1).map(line => {\n        for (let i = 0; i < padding; ++i) line = \" \" + line;\n        return eol + line;\n      }).join(\"\"));\n    } else sb.push(text + option.description);\n  });\n  var sb = [];\n  var hasCategories = false;\n  Object.keys(sbCategories).forEach(category => {\n    hasCategories = true;\n    sb.push(eol + \" \" + colorsUtil.gray(category) + eol);\n    sb.push(sbCategories[category].join(eol));\n  });\n  if (hasCategories) {\n    sb.push(eol + \" \" + colorsUtil.gray(\"Other\") + eol);\n  }\n  sb.push(sbOther.join(eol));\n  return sb.join(eol);\n}\n\nexports.help = help;\n\n/** Sanitizes an option value to be a valid value of the option's type. */\nfunction sanitizeValue(value, type) {\n  if (value != null) {\n    switch (type) {\n      case undefined:\n      case \"b\": return Boolean(value);\n      case \"i\": return Math.trunc(value) || 0;\n      case \"f\": return Number(value) || 0;\n      case \"s\": {\n        if (value === true) return \"\";\n        return String(value);\n      }\n      case \"I\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(v => Math.trunc(v) || 0);\n      }\n      case \"F\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(v => Number(v) || 0);\n      }\n      case \"S\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(String);\n      }\n    }\n  }\n  return undefined;\n}\n\n/** Merges two sets of options into one, preferring the current over the parent set. */\nfunction merge(config, currentOptions, parentOptions, parentBaseDir) {\n  const mergedOptions = {};\n  for (const [key, { type, mutuallyExclusive, isPath, useNodeResolution, cliOnly }] of Object.entries(config)) {\n    let currentValue = sanitizeValue(currentOptions[key], type);\n    let parentValue = sanitizeValue(parentOptions[key], type);\n    if (currentValue == null) {\n      if (parentValue != null) {\n        // only parent value present\n        if (cliOnly) continue;\n        if (Array.isArray(parentValue)) {\n          let exclude;\n          if (isPath) {\n            parentValue = parentValue.map(value => resolvePath(value, parentBaseDir, useNodeResolution));\n          }\n          if (mutuallyExclusive != null && (exclude = currentOptions[mutuallyExclusive])) {\n            mergedOptions[key] = parentValue.filter(value => !exclude.includes(value));\n          } else {\n            mergedOptions[key] = parentValue.slice();\n          }\n        } else {\n          if (isPath) {\n            parentValue = resolvePath(parentValue, parentBaseDir, useNodeResolution);\n          }\n          mergedOptions[key] = parentValue;\n        }\n      }\n    } else if (parentValue == null) {\n      // only current value present\n      if (Array.isArray(currentValue)) {\n        mergedOptions[key] = currentValue.slice();\n      } else {\n        mergedOptions[key] = currentValue;\n      }\n    } else {\n      // both current and parent values present\n      if (Array.isArray(currentValue)) {\n        if (cliOnly) {\n          mergedOptions[key] = currentValue.slice();\n          continue;\n        }\n        let exclude;\n        if (isPath) {\n          parentValue = parentValue.map(value => resolvePath(value, parentBaseDir, useNodeResolution));\n        }\n        if (mutuallyExclusive != null && (exclude = currentOptions[mutuallyExclusive])) {\n          mergedOptions[key] = [\n            ...currentValue,\n            ...parentValue.filter(value => !currentValue.includes(value) && !exclude.includes(value))\n          ];\n        } else {\n          mergedOptions[key] = [\n            ...currentValue,\n            ...parentValue.filter(value => !currentValue.includes(value)) // dedup\n          ];\n        }\n      } else {\n        mergedOptions[key] = currentValue;\n      }\n    }\n  }\n  return mergedOptions;\n}\n\nexports.merge = merge;\n\nfunction normalizePath(p) {\n  const parsed = path.parse(p);\n  if (!parsed.root) {\n    parsed.root = \"./\";\n  }\n  return path.format(parsed);\n}\n\nexports.normalizePath = normalizePath;\n\nconst dynrequire = typeof __webpack_require__ === \"function\"\n  ? __non_webpack_require__\n  : require;\n\n/** Resolves a single possibly relative path. Keeps absolute paths, otherwise prepends baseDir. */\nfunction resolvePath(p, baseDir, useNodeResolution = false) {\n  if (path.isAbsolute(p)) return p;\n  if (useNodeResolution && !p.startsWith(\".\")) {\n    return dynrequire.resolve(p, { paths: [ baseDir ] });\n  }\n  return normalizePath(path.join(baseDir, p));\n}\n\nexports.resolvePath = resolvePath;\n\n/** Populates default values on a parsed options result. */\nfunction addDefaults(config, options) {\n  for (const [key, { default: defaultValue }] of Object.entries(config)) {\n    if (options[key] == null && defaultValue != null) {\n      options[key] = defaultValue;\n    }\n  }\n}\n\nexports.addDefaults = addDefaults;\n","/**\n * @fileoverview UTF8 utility.\n * @license Apache-2.0\n */\n\n// @protobufjs/utf8\n\n/**\n * A minimal UTF8 implementation for number arrays.\n * @memberof util\n * @namespace\n */\nvar utf8 = exports;\n\n/**\n * Calculates the UTF8 byte length of a string.\n * @param {string} string String\n * @returns {number} Byte length\n */\nutf8.length = function utf8_length(string) {\n  var len = 0,\n      c = 0;\n  for (var i = 0, l = string.length; i < l; ++i) {\n    c = string.charCodeAt(i);\n    if (c < 128)\n      len += 1;\n    else if (c < 2048)\n      len += 2;\n    else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\n      ++i;\n      len += 4;\n    } else\n      len += 3;\n  }\n  return len;\n};\n\n/**\n * Reads UTF8 bytes as a string.\n * @param {Uint8Array} buffer Source buffer\n * @param {number} start Source start\n * @param {number} end Source end\n * @returns {string} String read\n */\nutf8.read = function utf8_read(buffer, start, end) {\n  var len = end - start;\n  if (len < 1)\n    return \"\";\n  var parts = null,\n      chunk = [],\n      i = 0, // char offset\n      t;     // temporary\n  while (start < end) {\n    t = buffer[start++];\n    if (t < 128)\n      chunk[i++] = t;\n    else if (t > 191 && t < 224)\n      chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\n    else if (t > 239 && t < 365) {\n      t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\n      chunk[i++] = 0xD800 + (t >> 10);\n      chunk[i++] = 0xDC00 + (t & 1023);\n    } else\n      chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\n    if (i > 8191) {\n      (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\n      i = 0;\n    }\n  }\n  if (parts) {\n    if (i)\n      parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\n    return parts.join(\"\");\n  }\n  return String.fromCharCode.apply(String, chunk.slice(0, i));\n};\n\n/**\n * Writes a string as UTF8 bytes.\n * @param {string} string Source string\n * @param {Uint8Array} buffer Destination buffer\n * @param {number} offset Destination offset\n * @returns {number} Bytes written\n */\nutf8.write = function utf8_write(string, buffer, offset) {\n  var start = offset,\n      c1, // character 1\n      c2; // character 2\n  for (var i = 0; i < string.length; ++i) {\n    c1 = string.charCodeAt(i);\n    if (c1 < 128) {\n      buffer[offset++] = c1;\n    } else if (c1 < 2048) {\n      buffer[offset++] = c1 >> 6 | 192;\n      buffer[offset++] = c1 & 63 | 128;\n    } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\n      c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\n      ++i;\n      buffer[offset++] = c1 >> 18 | 240;\n      buffer[offset++] = c1 >> 12 & 63 | 128;\n      buffer[offset++] = c1 >> 6 & 63 | 128;\n      buffer[offset++] = c1 & 63 | 128;\n    } else {\n      buffer[offset++] = c1 >> 12 | 224;\n      buffer[offset++] = c1 >> 6 & 63 | 128;\n      buffer[offset++] = c1 & 63 | 128;\n    }\n  }\n  return offset - start;\n};\n","// GENERATED FILE. DO NOT EDIT.\nvar loader = (function(exports) {\n  \"use strict\";\n  \n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.instantiate = instantiate;\n  exports.instantiateSync = instantiateSync;\n  exports.instantiateStreaming = instantiateStreaming;\n  exports.demangle = demangle;\n  exports.default = void 0;\n  // Runtime header offsets\n  const ID_OFFSET = -8;\n  const SIZE_OFFSET = -4; // Runtime ids\n  \n  const ARRAYBUFFER_ID = 0;\n  const STRING_ID = 1; // const ARRAYBUFFERVIEW_ID = 2;\n  // Runtime type information\n  \n  const ARRAYBUFFERVIEW = 1 << 0;\n  const ARRAY = 1 << 1;\n  const STATICARRAY = 1 << 2; // const SET = 1 << 3;\n  // const MAP = 1 << 4;\n  \n  const VAL_ALIGN_OFFSET = 6; // const VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\n  \n  const VAL_SIGNED = 1 << 11;\n  const VAL_FLOAT = 1 << 12; // const VAL_NULLABLE = 1 << 13;\n  \n  const VAL_MANAGED = 1 << 14; // const KEY_ALIGN_OFFSET = 15;\n  // const KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\n  // const KEY_SIGNED = 1 << 20;\n  // const KEY_FLOAT = 1 << 21;\n  // const KEY_NULLABLE = 1 << 22;\n  // const KEY_MANAGED = 1 << 23;\n  // Array(BufferView) layout\n  \n  const ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\n  const ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\n  const ARRAYBUFFERVIEW_BYTELENGTH_OFFSET = 8;\n  const ARRAYBUFFERVIEW_SIZE = 12;\n  const ARRAY_LENGTH_OFFSET = 12;\n  const ARRAY_SIZE = 16;\n  const E_NO_EXPORT_TABLE = \"Operation requires compiling with --exportTable\";\n  const E_NO_EXPORT_RUNTIME = \"Operation requires compiling with --exportRuntime\";\n  \n  const F_NO_EXPORT_RUNTIME = () => {\n    throw Error(E_NO_EXPORT_RUNTIME);\n  };\n  \n  const BIGINT = typeof BigUint64Array !== \"undefined\";\n  const THIS = Symbol();\n  const STRING_SMALLSIZE = 192; // break-even point in V8\n  \n  const STRING_CHUNKSIZE = 1024; // mitigate stack overflow\n  \n  const utf16 = new TextDecoder(\"utf-16le\", {\n    fatal: true\n  }); // != wtf16\n  \n  /** polyfill for Object.hasOwn */\n  \n  Object.hasOwn = Object.hasOwn || function (obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n  };\n  /** Gets a string from memory. */\n  \n  \n  function getStringImpl(buffer, ptr) {\n    let len = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2] >>> 1;\n    const wtf16 = new Uint16Array(buffer, ptr, len);\n    if (len <= STRING_SMALLSIZE) return String.fromCharCode(...wtf16);\n  \n    try {\n      return utf16.decode(wtf16);\n    } catch {\n      let str = \"\",\n          off = 0;\n  \n      while (len - off > STRING_CHUNKSIZE) {\n        str += String.fromCharCode(...wtf16.subarray(off, off += STRING_CHUNKSIZE));\n      }\n  \n      return str + String.fromCharCode(...wtf16.subarray(off));\n    }\n  }\n  /** Prepares the base module prior to instantiation. */\n  \n  \n  function preInstantiate(imports) {\n    const extendedExports = {};\n  \n    function getString(memory, ptr) {\n      if (!memory) return \"<yet unknown>\";\n      return getStringImpl(memory.buffer, ptr);\n    } // add common imports used by stdlib for convenience\n  \n  \n    const env = imports.env = imports.env || {};\n  \n    env.abort = env.abort || function abort(msg, file, line, colm) {\n      const memory = extendedExports.memory || env.memory; // prefer exported, otherwise try imported\n  \n      throw Error(`abort: ${getString(memory, msg)} at ${getString(memory, file)}:${line}:${colm}`);\n    };\n  \n    env.trace = env.trace || function trace(msg, n, ...args) {\n      const memory = extendedExports.memory || env.memory;\n      console.log(`trace: ${getString(memory, msg)}${n ? \" \" : \"\"}${args.slice(0, n).join(\", \")}`);\n    };\n  \n    env.seed = env.seed || Date.now;\n    imports.Math = imports.Math || Math;\n    imports.Date = imports.Date || Date;\n    return extendedExports;\n  }\n  /** Prepares the final module once instantiation is complete. */\n  \n  \n  function postInstantiate(extendedExports, instance) {\n    const exports = instance.exports;\n    const memory = exports.memory;\n    const table = exports.table;\n  \n    const __new = exports.__new || F_NO_EXPORT_RUNTIME;\n  \n    const __pin = exports.__pin || F_NO_EXPORT_RUNTIME;\n  \n    const __unpin = exports.__unpin || F_NO_EXPORT_RUNTIME;\n  \n    const __collect = exports.__collect || F_NO_EXPORT_RUNTIME;\n  \n    const __rtti_base = exports.__rtti_base;\n    const getRttiCount = __rtti_base ? arr => arr[__rtti_base >>> 2] : F_NO_EXPORT_RUNTIME;\n    extendedExports.__new = __new;\n    extendedExports.__pin = __pin;\n    extendedExports.__unpin = __unpin;\n    extendedExports.__collect = __collect;\n    /** Gets the runtime type info for the given id. */\n  \n    function getRttInfo(id) {\n      const U32 = new Uint32Array(memory.buffer);\n      if ((id >>>= 0) >= getRttiCount(U32)) throw Error(`invalid id: ${id}`);\n      return U32[(__rtti_base + 4 >>> 2) + (id << 1)];\n    }\n    /** Gets the runtime base id for the given id. */\n  \n  \n    function getRttBase(id) {\n      const U32 = new Uint32Array(memory.buffer);\n      if ((id >>>= 0) >= getRttiCount(U32)) throw Error(`invalid id: ${id}`);\n      return U32[(__rtti_base + 4 >>> 2) + (id << 1) + 1];\n    }\n    /** Gets and validate runtime type info for the given id for array like objects */\n  \n  \n    function getArrayInfo(id) {\n      const info = getRttInfo(id);\n      if (!(info & (ARRAYBUFFERVIEW | ARRAY | STATICARRAY))) throw Error(`not an array: ${id}, flags=${info}`);\n      return info;\n    }\n    /** Gets the runtime alignment of a collection's values. */\n  \n  \n    function getValueAlign(info) {\n      return 31 - Math.clz32(info >>> VAL_ALIGN_OFFSET & 31); // -1 if none\n    }\n    /** Gets the runtime alignment of a collection's keys. */\n    // function getKeyAlign(info) {\n    //   return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n    // }\n  \n    /** Allocates a new string in the module's memory and returns its pointer. */\n  \n  \n    function __newString(str) {\n      if (str == null) return 0;\n      const length = str.length;\n  \n      const ptr = __new(length << 1, STRING_ID);\n  \n      const U16 = new Uint16Array(memory.buffer);\n  \n      for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n  \n      return ptr;\n    }\n  \n    extendedExports.__newString = __newString;\n    /** Allocates a new ArrayBuffer in the module's memory and returns its pointer. */\n  \n    function __newArrayBuffer(buf) {\n      if (buf == null) return 0;\n      const bufview = new Uint8Array(buf);\n  \n      const ptr = __new(bufview.length, ARRAYBUFFER_ID);\n  \n      const U8 = new Uint8Array(memory.buffer);\n      U8.set(bufview, ptr);\n      return ptr;\n    }\n  \n    extendedExports.__newArrayBuffer = __newArrayBuffer;\n    /** Reads a string from the module's memory by its pointer. */\n  \n    function __getString(ptr) {\n      if (!ptr) return null;\n      const buffer = memory.buffer;\n      const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n      if (id !== STRING_ID) throw Error(`not a string: ${ptr}`);\n      return getStringImpl(buffer, ptr);\n    }\n  \n    extendedExports.__getString = __getString;\n    /** Gets the view matching the specified alignment, signedness and floatness. */\n  \n    function getView(alignLog2, signed, float) {\n      const buffer = memory.buffer;\n  \n      if (float) {\n        switch (alignLog2) {\n          case 2:\n            return new Float32Array(buffer);\n  \n          case 3:\n            return new Float64Array(buffer);\n        }\n      } else {\n        switch (alignLog2) {\n          case 0:\n            return new (signed ? Int8Array : Uint8Array)(buffer);\n  \n          case 1:\n            return new (signed ? Int16Array : Uint16Array)(buffer);\n  \n          case 2:\n            return new (signed ? Int32Array : Uint32Array)(buffer);\n  \n          case 3:\n            return new (signed ? BigInt64Array : BigUint64Array)(buffer);\n        }\n      }\n  \n      throw Error(`unsupported align: ${alignLog2}`);\n    }\n    /** Allocates a new array in the module's memory and returns its pointer. */\n  \n  \n    function __newArray(id, valuesOrCapacity = 0) {\n      const input = valuesOrCapacity;\n      const info = getArrayInfo(id);\n      const align = getValueAlign(info);\n      const isArrayLike = typeof input !== \"number\";\n      const length = isArrayLike ? input.length : input;\n  \n      const buf = __new(length << align, info & STATICARRAY ? id : ARRAYBUFFER_ID);\n  \n      let result;\n  \n      if (info & STATICARRAY) {\n        result = buf;\n      } else {\n        __pin(buf);\n  \n        const arr = __new(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n  \n        __unpin(buf);\n  \n        const U32 = new Uint32Array(memory.buffer);\n        U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = buf;\n        U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n        U32[arr + ARRAYBUFFERVIEW_BYTELENGTH_OFFSET >>> 2] = length << align;\n        if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n        result = arr;\n      }\n  \n      if (isArrayLike) {\n        const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n        const start = buf >>> align;\n  \n        if (info & VAL_MANAGED) {\n          for (let i = 0; i < length; ++i) {\n            view[start + i] = input[i];\n          }\n        } else {\n          view.set(input, start);\n        }\n      }\n  \n      return result;\n    }\n  \n    extendedExports.__newArray = __newArray;\n    /** Gets a live view on an array's values in the module's memory. Infers the array type from RTTI. */\n  \n    function __getArrayView(arr) {\n      const U32 = new Uint32Array(memory.buffer);\n      const id = U32[arr + ID_OFFSET >>> 2];\n      const info = getArrayInfo(id);\n      const align = getValueAlign(info);\n      let buf = info & STATICARRAY ? arr : U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n      const length = info & ARRAY ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2] : U32[buf + SIZE_OFFSET >>> 2] >>> align;\n      return getView(align, info & VAL_SIGNED, info & VAL_FLOAT).subarray(buf >>>= align, buf + length);\n    }\n  \n    extendedExports.__getArrayView = __getArrayView;\n    /** Copies an array's values from the module's memory. Infers the array type from RTTI. */\n  \n    function __getArray(arr) {\n      const input = __getArrayView(arr);\n  \n      const len = input.length;\n      const out = new Array(len);\n  \n      for (let i = 0; i < len; i++) out[i] = input[i];\n  \n      return out;\n    }\n  \n    extendedExports.__getArray = __getArray;\n    /** Copies an ArrayBuffer's value from the module's memory. */\n  \n    function __getArrayBuffer(ptr) {\n      const buffer = memory.buffer;\n      const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n      return buffer.slice(ptr, ptr + length);\n    }\n  \n    extendedExports.__getArrayBuffer = __getArrayBuffer;\n    /** Gets a function from poiner which contain table's index. */\n  \n    function __getFunction(ptr) {\n      if (!table) throw Error(E_NO_EXPORT_TABLE);\n      const index = new Uint32Array(memory.buffer)[ptr >>> 2];\n      return table.get(index);\n    }\n  \n    extendedExports.__getFunction = __getFunction;\n    /** Copies a typed array's values from the module's memory. */\n  \n    function getTypedArray(Type, alignLog2, ptr) {\n      return new Type(getTypedArrayView(Type, alignLog2, ptr));\n    }\n    /** Gets a live view on a typed array's values in the module's memory. */\n  \n  \n    function getTypedArrayView(Type, alignLog2, ptr) {\n      const buffer = memory.buffer;\n      const U32 = new Uint32Array(buffer);\n      return new Type(buffer, U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2], U32[ptr + ARRAYBUFFERVIEW_BYTELENGTH_OFFSET >>> 2] >>> alignLog2);\n    }\n    /** Attach a set of get TypedArray and View functions to the exports. */\n  \n  \n    function attachTypedArrayFunctions(ctor, name, align) {\n      extendedExports[`__get${name}`] = getTypedArray.bind(null, ctor, align);\n      extendedExports[`__get${name}View`] = getTypedArrayView.bind(null, ctor, align);\n    }\n  \n    [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array].forEach(ctor => {\n      attachTypedArrayFunctions(ctor, ctor.name, 31 - Math.clz32(ctor.BYTES_PER_ELEMENT));\n    });\n  \n    if (BIGINT) {\n      [BigUint64Array, BigInt64Array].forEach(ctor => {\n        attachTypedArrayFunctions(ctor, ctor.name.slice(3), 3);\n      });\n    }\n    /** Tests whether an object is an instance of the class represented by the specified base id. */\n  \n  \n    function __instanceof(ptr, baseId) {\n      const U32 = new Uint32Array(memory.buffer);\n      let id = U32[ptr + ID_OFFSET >>> 2];\n  \n      if (id <= getRttiCount(U32)) {\n        do {\n          if (id == baseId) return true;\n          id = getRttBase(id);\n        } while (id);\n      }\n  \n      return false;\n    }\n  \n    extendedExports.__instanceof = __instanceof; // Pull basic exports to extendedExports so code in preInstantiate can use them\n  \n    extendedExports.memory = extendedExports.memory || memory;\n    extendedExports.table = extendedExports.table || table; // Demangle exports and provide the usual utility on the prototype\n  \n    return demangle(exports, extendedExports);\n  }\n  \n  function isResponse(src) {\n    return typeof Response !== \"undefined\" && src instanceof Response;\n  }\n  \n  function isModule(src) {\n    return src instanceof WebAssembly.Module;\n  }\n  /** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\n  \n  \n  async function instantiate(source, imports = {}) {\n    if (isResponse(source = await source)) return instantiateStreaming(source, imports);\n    const module = isModule(source) ? source : await WebAssembly.compile(source);\n    const extended = preInstantiate(imports);\n    const instance = await WebAssembly.instantiate(module, imports);\n    const exports = postInstantiate(extended, instance);\n    return {\n      module,\n      instance,\n      exports\n    };\n  }\n  /** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\n  \n  \n  function instantiateSync(source, imports = {}) {\n    const module = isModule(source) ? source : new WebAssembly.Module(source);\n    const extended = preInstantiate(imports);\n    const instance = new WebAssembly.Instance(module, imports);\n    const exports = postInstantiate(extended, instance);\n    return {\n      module,\n      instance,\n      exports\n    };\n  }\n  /** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\n  \n  \n  async function instantiateStreaming(source, imports = {}) {\n    if (!WebAssembly.instantiateStreaming) {\n      return instantiate(isResponse(source = await source) ? source.arrayBuffer() : source, imports);\n    }\n  \n    const extended = preInstantiate(imports);\n    const result = await WebAssembly.instantiateStreaming(source, imports);\n    const exports = postInstantiate(extended, result.instance);\n    return { ...result,\n      exports\n    };\n  }\n  /** Demangles an AssemblyScript module's exports to a friendly object structure. */\n  \n  \n  function demangle(exports, extendedExports = {}) {\n    const setArgumentsLength = exports[\"__argumentsLength\"] ? length => {\n      exports[\"__argumentsLength\"].value = length;\n    } : exports[\"__setArgumentsLength\"] || exports[\"__setargc\"] || (() => {\n      /* nop */\n    });\n  \n    for (let internalName of Object.keys(exports)) {\n      const elem = exports[internalName];\n      let parts = internalName.split(\".\");\n      let curr = extendedExports;\n  \n      while (parts.length > 1) {\n        let part = parts.shift();\n        if (!Object.hasOwn(curr, part)) curr[part] = {};\n        curr = curr[part];\n      }\n  \n      let name = parts[0];\n      let hash = name.indexOf(\"#\");\n  \n      if (hash >= 0) {\n        const className = name.substring(0, hash);\n        const classElem = curr[className];\n  \n        if (typeof classElem === \"undefined\" || !classElem.prototype) {\n          const ctor = function (...args) {\n            return ctor.wrap(ctor.prototype.constructor(0, ...args));\n          };\n  \n          ctor.prototype = {\n            valueOf() {\n              return this[THIS];\n            }\n  \n          };\n  \n          ctor.wrap = function (thisValue) {\n            return Object.create(ctor.prototype, {\n              [THIS]: {\n                value: thisValue,\n                writable: false\n              }\n            });\n          };\n  \n          if (classElem) Object.getOwnPropertyNames(classElem).forEach(name => Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name)));\n          curr[className] = ctor;\n        }\n  \n        name = name.substring(hash + 1);\n        curr = curr[className].prototype;\n  \n        if (/^(get|set):/.test(name)) {\n          if (!Object.hasOwn(curr, name = name.substring(4))) {\n            let getter = exports[internalName.replace(\"set:\", \"get:\")];\n            let setter = exports[internalName.replace(\"get:\", \"set:\")];\n            Object.defineProperty(curr, name, {\n              get() {\n                return getter(this[THIS]);\n              },\n  \n              set(value) {\n                setter(this[THIS], value);\n              },\n  \n              enumerable: true\n            });\n          }\n        } else {\n          if (name === 'constructor') {\n            (curr[name] = function (...args) {\n              setArgumentsLength(args.length);\n              return elem(...args);\n            }).original = elem;\n          } else {\n            // instance method\n            (curr[name] = function (...args) {\n              // !\n              setArgumentsLength(args.length);\n              return elem(this[THIS], ...args);\n            }).original = elem;\n          }\n        }\n      } else {\n        if (/^(get|set):/.test(name)) {\n          if (!Object.hasOwn(curr, name = name.substring(4))) {\n            Object.defineProperty(curr, name, {\n              get: exports[internalName.replace(\"set:\", \"get:\")],\n              set: exports[internalName.replace(\"get:\", \"set:\")],\n              enumerable: true\n            });\n          }\n        } else if (typeof elem === \"function\" && elem !== setArgumentsLength) {\n          (curr[name] = (...args) => {\n            setArgumentsLength(args.length);\n            return elem(...args);\n          }).original = elem;\n        } else {\n          curr[name] = elem;\n        }\n      }\n    }\n  \n    return extendedExports;\n  }\n  \n  var _default = {\n    instantiate,\n    instantiateSync,\n    instantiateStreaming,\n    demangle\n  };\n  exports.default = _default;\n  return exports;\n})({});\nif (typeof define === 'function' && define.amd) define([], function() { return loader; });\nelse if (typeof module === 'object' && typeof exports==='object') module.exports = loader;\n","// GENERATED FILE. DO NOT EDIT.\nvar rtrace = (function(exports) {\n  \"use strict\";\n  \n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.Rtrace = exports.TOTAL_OVERHEAD = exports.OBJECT_OVERHEAD = exports.BLOCK_OVERHEAD = void 0;\n  // WebAssembly pages are 65536 kb\n  const PAGE_SIZE_BITS = 16;\n  const PAGE_SIZE = 1 << PAGE_SIZE_BITS;\n  const PAGE_MASK = PAGE_SIZE - 1; // Wasm32 pointer size is 4 bytes\n  \n  const PTR_SIZE_BITS = 2;\n  const PTR_SIZE = 1 << PTR_SIZE_BITS;\n  const PTR_MASK = PTR_SIZE - 1;\n  const PTR_VIEW = Uint32Array;\n  const BLOCK_OVERHEAD = PTR_SIZE;\n  exports.BLOCK_OVERHEAD = BLOCK_OVERHEAD;\n  const OBJECT_OVERHEAD = 16;\n  exports.OBJECT_OVERHEAD = OBJECT_OVERHEAD;\n  const TOTAL_OVERHEAD = BLOCK_OVERHEAD + OBJECT_OVERHEAD;\n  exports.TOTAL_OVERHEAD = TOTAL_OVERHEAD;\n  \n  function assert(x) {\n    if (!x) throw Error(\"assertion failed\");\n    return x;\n  }\n  \n  Error.stackTraceLimit = 15;\n  \n  function trimStacktrace(stack, levels) {\n    return stack.split(/\\r?\\n/).slice(1 + levels);\n  }\n  \n  const hrtime = typeof performance !== \"undefined\" && performance.now ? performance.now : typeof process !== \"undefined\" && process.hrtime ? () => {\n    let t = process.hrtime();\n    return t[0] * 1e3 + t[1] / 1e6;\n  } : Date.now;\n  const mmTagsToString = [\"\", \"FREE\", \"LEFTFREE\", \"FREE+LEFTFREE\"];\n  const gcColorToString = [\"BLACK/WHITE\", \"WHITE/BLACK\", \"GRAY\", \"INVALID\"];\n  \n  class Rtrace {\n    constructor(options) {\n      this.options = options || {};\n  \n      this.onerror = this.options.onerror || function () {\n        /* nop */\n      };\n  \n      this.oninfo = this.options.oninfo || function () {\n        /* nop */\n      };\n  \n      this.oncollect_ = this.options.oncollect || function () {\n        /* nop */\n      };\n  \n      this.memory = null;\n      this.shadow = null;\n      this.shadowStart = 0x100000000;\n      this.blocks = new Map();\n      this.allocSites = new Map();\n      this.freedBlocks = new Map();\n      this.gcProfileStart = 0;\n      this.gcProfile = [];\n      this.allocCount = 0;\n      this.resizeCount = 0;\n      this.moveCount = 0;\n      this.freeCount = 0;\n      this.heapBase = 0x100000000;\n    }\n  \n    install(imports) {\n      if (!imports) imports = {};\n      imports.rtrace = Object.assign(imports.rtrace || {}, {\n        oninit: this.oninit.bind(this),\n        onalloc: this.onalloc.bind(this),\n        onresize: this.onresize.bind(this),\n        onmove: this.onmove.bind(this),\n        onvisit: this.onvisit.bind(this),\n        onfree: this.onfree.bind(this),\n        oninterrupt: this.oninterrupt.bind(this),\n        onyield: this.onyield.bind(this),\n        oncollect: this.oncollect.bind(this),\n        onstore: this.onstore.bind(this),\n        onload: this.onload.bind(this)\n      });\n      return imports;\n    }\n    /** Synchronizes the shadow memory with the module's memory. */\n  \n  \n    syncShadow() {\n      if (!this.memory) {\n        this.memory = assert(this.options.getMemory());\n        this.shadow = new WebAssembly.Memory({\n          initial: (this.memory.buffer.byteLength + PAGE_MASK & ~PAGE_MASK) >>> PAGE_SIZE_BITS\n        });\n      } else {\n        var diff = this.memory.buffer.byteLength - this.shadow.buffer.byteLength;\n        if (diff > 0) this.shadow.grow(diff >>> 16);\n      }\n    }\n    /** Marks a block's presence in shadow memory. */\n  \n  \n    markShadow(info, oldSize = 0) {\n      assert(this.shadow && this.shadow.byteLength == this.memory.byteLength);\n      assert((info.size & PTR_MASK) == 0);\n  \n      if (info.ptr < this.shadowStart) {\n        this.shadowStart = info.ptr;\n      }\n  \n      var len = info.size >>> PTR_SIZE_BITS;\n      var view = new PTR_VIEW(this.shadow.buffer, info.ptr, len);\n      var errored = false;\n      var start = oldSize >>> PTR_SIZE_BITS;\n  \n      for (let i = 0; i < start; ++i) {\n        if (view[i] != info.ptr && !errored) {\n          this.onerror(Error(\"shadow region mismatch: \" + view[i] + \" != \" + info.ptr), info);\n          errored = true;\n        }\n      }\n  \n      errored = false;\n  \n      for (let i = start; i < len; ++i) {\n        if (view[i] != 0 && !errored) {\n          this.onerror(Error(\"shadow region already in use: \" + view[i] + \" != 0\"), info);\n          errored = true;\n        }\n  \n        view[i] = info.ptr;\n      }\n    }\n    /** Unmarks a block's presence in shadow memory. */\n  \n  \n    unmarkShadow(info, oldSize = info.size) {\n      assert(this.shadow && this.shadow.byteLength == this.memory.byteLength);\n      var len = oldSize >>> PTR_SIZE_BITS;\n      var view = new PTR_VIEW(this.shadow.buffer, info.ptr, len);\n      var errored = false;\n      var start = 0;\n  \n      if (oldSize != info.size) {\n        assert(oldSize > info.size);\n        start = info.size >>> PTR_SIZE_BITS;\n      }\n  \n      for (let i = 0; i < len; ++i) {\n        if (view[i] != info.ptr && !errored) {\n          this.onerror(Error(\"shadow region mismatch: \" + view[i] + \" != \" + info.ptr), info);\n          errored = true;\n        }\n  \n        if (i >= start) view[i] = 0;\n      }\n    }\n    /** Performs an access to shadow memory. */\n  \n  \n    accessShadow(ptr, size, isLoad, isRT) {\n      this.syncShadow();\n      if (ptr < this.shadowStart) return;\n      var value = new Uint32Array(this.shadow.buffer, ptr & ~PTR_MASK, 1)[0];\n      if (value != 0) return;\n  \n      if (!isRT) {\n        let stack = trimStacktrace(new Error().stack, 2);\n        this.onerror(new Error(\"OOB \" + (isLoad ? \"load\" : \"store\") + 8 * size + \" at address \" + ptr + \"\\n\" + stack.join(\"\\n\")));\n      }\n    }\n    /** Obtains information about a block. */\n  \n  \n    getBlockInfo(ptr) {\n      const [mmInfo, gcInfo, gcInfo2, rtId, rtSize] = new Uint32Array(this.memory.buffer, ptr, 5);\n      const size = mmInfo & ~3;\n      return {\n        ptr,\n        size: BLOCK_OVERHEAD + size,\n        // total incl. overhead\n        mmInfo: {\n          tags: mmTagsToString[mmInfo & 3],\n          size: size // as stored excl. overhead\n  \n        },\n        gcInfo: {\n          color: gcColorToString[gcInfo & 3],\n          next: gcInfo & ~3,\n          prev: gcInfo2\n        },\n        rtId,\n        rtSize\n      };\n    }\n    /** Checks if rtrace is active, i.e. at least one event has occurred. */\n  \n  \n    get active() {\n      return Boolean(this.allocCount || this.resizeCount || this.moveCount || this.freeCount);\n    }\n    /** Checks if there are any leaks and emits them via `oninfo`. Returns the number of live blocks. */\n  \n  \n    check() {\n      if (this.oninfo) {\n        for (let [ptr, info] of this.blocks) {\n          this.oninfo(\"LIVE \" + ptr + \"\\n\" + info.allocStack.join(\"\\n\"));\n        }\n      }\n  \n      return this.blocks.size;\n    } // Runtime instrumentation\n  \n  \n    oninit(heapBase) {\n      this.heapBase = heapBase;\n      this.gcProfileStart = 0;\n      this.gcProfile.length = 0;\n      this.oninfo(\"INIT heapBase=\" + heapBase);\n    }\n  \n    onalloc(ptr) {\n      this.syncShadow();\n      ++this.allocCount;\n      var info = this.getBlockInfo(ptr);\n  \n      if (this.blocks.has(ptr)) {\n        this.onerror(Error(\"duplicate alloc: \" + ptr), info);\n      } else {\n        this.oninfo(\"ALLOC \" + ptr + \"..\" + (ptr + info.size));\n        this.markShadow(info);\n        let allocStack = trimStacktrace(new Error().stack, 1); // strip onalloc\n  \n        this.blocks.set(ptr, Object.assign(info, {\n          allocStack\n        }));\n      }\n    }\n  \n    onresize(ptr, oldSize) {\n      this.syncShadow();\n      ++this.resizeCount;\n      const info = this.getBlockInfo(ptr);\n  \n      if (!this.blocks.has(ptr)) {\n        this.onerror(Error(\"orphaned resize: \" + ptr), info);\n      } else {\n        const beforeInfo = this.blocks.get(ptr);\n  \n        if (beforeInfo.size != oldSize) {\n          this.onerror(Error(`size mismatch upon resize: ${ptr} (${beforeInfo.size} != ${oldSize})`), info);\n        }\n  \n        const newSize = info.size;\n        this.oninfo(\"RESIZE \" + ptr + \"..\" + (ptr + newSize) + \" (\" + oldSize + \"->\" + newSize + \")\");\n        this.blocks.set(ptr, Object.assign(info, {\n          allocStack: beforeInfo.allocStack\n        }));\n  \n        if (newSize > oldSize) {\n          this.markShadow(info, oldSize);\n        } else if (newSize < oldSize) {\n          this.unmarkShadow(info, oldSize);\n        }\n      }\n    }\n  \n    onmove(oldPtr, newPtr) {\n      this.syncShadow();\n      ++this.moveCount;\n      var oldInfo = this.getBlockInfo(oldPtr);\n      var newInfo = this.getBlockInfo(newPtr);\n  \n      if (!this.blocks.has(oldPtr)) {\n        this.onerror(Error(\"orphaned move (old): \" + oldPtr), oldInfo);\n      } else {\n        if (!this.blocks.has(newPtr)) {\n          this.onerror(Error(\"orphaned move (new): \" + newPtr), newInfo);\n        } else {\n          const beforeInfo = this.blocks.get(oldPtr);\n          const oldSize = oldInfo.size;\n          const newSize = newInfo.size;\n  \n          if (beforeInfo.size != oldSize) {\n            this.onerror(Error(`size mismatch upon move: ${oldPtr} (${beforeInfo.size} != ${oldSize})`), oldInfo);\n          }\n  \n          this.oninfo(\"MOVE \" + oldPtr + \"..\" + (oldPtr + oldSize) + \" -> \" + newPtr + \"..\" + (newPtr + newSize)); // calls new alloc before and old free after\n        }\n      }\n    }\n  \n    onvisit(ptr) {\n      // Indicates that a block has been freed but it still visited by the GC\n      if (ptr > this.heapBase && !this.blocks.has(ptr)) {\n        let err = Error(\"orphaned visit: \" + ptr);\n        let info = this.freedBlocks.get(ptr);\n  \n        if (info) {\n          err.stack += \"\\n^ allocated at:\\n\" + info.allocStack.join(\"\\n\");\n          err.stack += \"\\n^ freed at:\\n\" + info.freeStack.join(\"\\n\");\n        }\n  \n        this.onerror(err, null);\n        return false;\n      }\n  \n      return true;\n    }\n  \n    onfree(ptr) {\n      this.syncShadow();\n      ++this.freeCount;\n      var info = this.getBlockInfo(ptr);\n  \n      if (!this.blocks.has(ptr)) {\n        this.onerror(Error(\"orphaned free: \" + ptr), info);\n      } else {\n        const oldInfo = this.blocks.get(ptr);\n  \n        if (info.size != oldInfo.size) {\n          this.onerror(Error(`size mismatch upon free: ${ptr} (${oldInfo.size} != ${info.size})`), info);\n        }\n  \n        this.oninfo(\"FREE \" + ptr + \"..\" + (ptr + info.size));\n        this.unmarkShadow(info);\n        const allocInfo = this.blocks.get(ptr);\n        this.blocks.delete(ptr);\n        const allocStack = allocInfo.allocStack;\n        const freeStack = trimStacktrace(new Error().stack, 1); // strip onfree\n        // (not much) TODO: Maintaining these is essentially a memory leak\n  \n        this.freedBlocks.set(ptr, {\n          allocStack,\n          freeStack\n        });\n      }\n    }\n  \n    oncollect(total) {\n      this.oninfo(`COLLECT at ${total}`);\n      this.plot(total);\n      this.oncollect_();\n    } // GC profiling\n  \n  \n    plot(total, pause = 0) {\n      if (!this.gcProfileStart) this.gcProfileStart = Date.now();\n      this.gcProfile.push([Date.now() - this.gcProfileStart, total, pause]);\n    }\n  \n    oninterrupt(total) {\n      this.interruptStart = hrtime();\n      this.plot(total);\n    }\n  \n    onyield(total) {\n      var pause = hrtime() - this.interruptStart;\n      if (pause >= 1) console.log(\"interrupted for \" + pause.toFixed(1) + \"ms\");\n      this.plot(total, pause);\n    } // Memory instrumentation\n  \n  \n    onstore(ptr, offset, bytes, isRT) {\n      this.accessShadow(ptr + offset, bytes, false, isRT);\n      return ptr;\n    }\n  \n    onload(ptr, offset, bytes, isRT) {\n      this.accessShadow(ptr + offset, bytes, true, isRT);\n      return ptr;\n    }\n  \n  }\n  \n  exports.Rtrace = Rtrace;\n  var _default = {\n    Rtrace\n  };\n  exports.default = _default;\n  return exports;\n})({});\nif (typeof define === 'function' && define.amd) define([], function() { return rtrace; });\nelse if (typeof module === 'object' && typeof exports==='object') module.exports = rtrace;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(874);\n"],"names":["root","factory","exports","module","require","e","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__725__","__WEBPACK_EXTERNAL_MODULE__474__","Error","code","fs","path","process","utf8","colorsUtil","optionsUtil","mkdirp","find","binaryen","g","dynrequire","WIN","platform","EOL","SEP","toUpperSnakeCase","str","replace","toUpperCase","setupExtension","ext","startsWith","ext_d","re","RegExp","re_d","re_except_d","re_index","defaultExtension","__wrap","ptrOrObj","wrapperClass","wrap","assemblyscript","__newString","__getString","__pin","__unpin","__collect","Object","defineProperty","get","ready","removeAllListeners","wasmArg","argv","findIndex","arg","binaryPath","splice","loader","rtrace","onerror","err","info","console","log","getMemory","memory","oncollect","gcProfile","length","writeFileSync","timestamp","Date","now","JSON","stringify","join","instantiateSync","readFileSync","install","_start","loadAssemblyScriptWasm","tsNode","register","project","typeCheck","transpileOnly","compilerHost","files","skipIgnore","moduleTypes","compilerOptions","target","e_ts","TSError","stack","loadAssemblyScriptJS","ptr","_","loadAssemblyScript","isBundle","version","options","libraryPrefix","LIBRARY_PREFIX","valueOf","defaultOptimizeLevel","defaultShrinkLevel","libraryFiles","libDir","bundled","forEach","file","definitionFiles","readDefinition","name","assembly","portable","compileString","sources","output","create","stdout","createMemoryStream","stderr","keys","key","val","opt","type","push","Array","isArray","String","main","concat","readFile","prototype","hasOwnProperty","call","writeFile","contents","listFiles","callback","bundleMinorVersion","bundleMajorVersion","bundlePatchVersion","versionParts","split","parseInt","readFileNode","writeFileNode","listFilesNode","stats","readTime","readCount","writeTime","writeCount","parseTime","parseCount","initializeTime","initializeCount","compileTime","compileCount","emitTime","emitCount","validateTime","validateCount","optimizeTime","optimizeCount","transformTime","transformCount","extension","optionsResult","parse","opts","arguments","noColors","supported","from","unknownOpts","unknown","write","yellow","trailingArgv","trailing","red","test","baseDir","normalize","asconfigPath","resolvePath","config","asconfigFile","basename","asconfigDir","dirname","asconfig","getAsconfig","asconfigHasEntries","entries","help","out","color","white","cyan","seenAsconfig","Set","add","targets","targetOptions","merge","generalOptions","entry","extends","has","addDefaults","showConfig","unique","values","program","runtime","newOptions","setTarget","setRuntime","setNoAssert","noAssert","setExportMemory","noExportMemory","setImportMemory","importMemory","setInitialMemory","initialMemory","setMaximumMemory","maximumMemory","setSharedMemory","sharedMemory","setImportTable","importTable","setExportTable","exportTable","setExplicitStart","explicitStart","setMemoryBase","memoryBase","setTableBase","tableBase","setSourceMap","sourceMap","setNoUnsafe","noUnsafe","setPedantic","pedantic","setLowMemoryLimit","lowMemoryLimit","setExportRuntime","exportRuntime","setBundleVersion","stackSize","DEFAULT_STACK_SIZE","setStackSize","use","aliases","i","k","part","p","indexOf","alias","substring","trim","aliasPtr","namePtr","setGlobalAlias","features","disable","flag","disableFeature","enable","enableFeature","optimizeLevel","shrinkLevel","optimize","Math","min","max","setOptimizeLevelHints","newProgram","transforms","transform","tsNodeRegistered","transformArgs","filename","endsWith","skipProject","resolve","paths","cwd","map","classOrModule","assign","error","applyTransform","args","transfromTime","measure","libPath","includes","textPtr","pathPtr","customLibDirs","lib","libFiles","j","l","libText","packageMains","Map","packageBases","getFile","internalPath","dependeePath","sourceText","sourcePath","plainName","indexName","match","packageName","isPackageRoot","undefined","filePath","basePath","traceResolution","parts","slice","currentPath","relative","mainPath","jsonPath","jsonText","json","ascMain","set","mainDir","parseBacklog","nextFile","getDependee","numErrors","checkDiagnostics","reportDiagnostic","message","runtimeName","runtimePath","runtimeText","isAbsolute","parser","s","normalizedPath","sort","initializeProgram","crash","compile","original","Module","wrapModule","ref","dispose","noValidate","isValid","validate","trapMode","runPasses","debugInfo","debug","converge","zeroFilledMemory","pass","last","emitBinary","next","noEmit","outFile","textFile","jsFile","binaryFile","hasStdout","hasOutput","tsdFile","idlFile","wasm","sourceMapURL","binary","writeStdout","sourceRoot","index","text","getSource","sourcesContent","wastFormat","emitText","emitStackIR","idl","buildIDL","tsd","buildTSD","js","emitAsmjs","printStats","dirPath","outputFilePath","existsSync","readdirSync","filter","used","toString","isObject","location","ex","include","diagnosticPtr","nextDiagnostic","formatDiagnostic","isTTY","diagnostic","DiagnosticMessage","range","Range","relatedRange","rangeSource","source","Source","relatedRangeSource","category","start","end","isError","createStats","fn","hrtime","times","formatTime","time","toFixed","format","count","len","pad","allocBuffer","Buffer","allocUnsafe","Uint8Array","stream","chunk","buffer","reset","toBuffer","offset","read","stage","BAR","exit","tscOptions","alwaysStrict","noImplicitAny","noImplicitReturns","noImplicitThis","noEmitOnError","strictNullChecks","experimentalDecorators","noLib","types","allowJs","assertPath","TypeError","normalizeStringPosix","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","posix","resolvedPath","resolvedAbsolute","trailingSeparator","joined","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","hasRoot","matchedSlash","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","sep","dir","base","_format","ret","delimiter","win32","umask","previousTimestamp","clocktime","performanceNow","performance","seconds","floor","nanoseconds","mozNow","msNow","oNow","webkitNow","getTime","proc","isCI","env","colors","gray","GRAY","RESET","RED","green","GREEN","YELLOW","blue","BLUE","magenta","MAGENTA","CYAN","WHITE","findFiles","statSync","isDirectory","iname","made","mode","mkdirSync","err0","stat","err1","sanitizeValue","value","Boolean","trunc","Number","v","normalizePath","parsed","propagateDefaults","option","default","exec","parseFloat","indent","padding","eol","sbCategories","sbOther","description","sb","noCategories","line","hasCategories","currentOptions","parentOptions","parentBaseDir","mergedOptions","mutuallyExclusive","isPath","useNodeResolution","cliOnly","currentValue","parentValue","exclude","defaultValue","string","c","t","fromCharCode","apply","c1","c2","instantiate","instantiateStreaming","demangle","F_NO_EXPORT_RUNTIME","BIGINT","BigUint64Array","THIS","Symbol","utf16","TextDecoder","fatal","getStringImpl","Uint32Array","wtf16","Uint16Array","decode","off","subarray","preInstantiate","imports","extendedExports","getString","abort","msg","colm","trace","n","seed","postInstantiate","instance","table","__new","__rtti_base","getRttiCount","arr","getRttBase","id","U32","getArrayInfo","getRttInfo","getValueAlign","clz32","getView","alignLog2","signed","float","Float32Array","Float64Array","Int8Array","Int16Array","Int32Array","BigInt64Array","__getArrayView","align","buf","getTypedArray","Type","getTypedArrayView","attachTypedArrayFunctions","ctor","bind","U16","__newArrayBuffer","bufview","__newArray","valuesOrCapacity","input","isArrayLike","result","view","__getArray","__getArrayBuffer","__getFunction","Uint8ClampedArray","BYTES_PER_ELEMENT","__instanceof","baseId","isResponse","src","Response","isModule","WebAssembly","async","extended","Instance","arrayBuffer","setArgumentsLength","internalName","elem","curr","shift","hasOwn","hash","className","classElem","constructor","thisValue","writable","getOwnPropertyNames","getOwnPropertyDescriptor","getter","setter","enumerable","obj","prop","_default","Rtrace","TOTAL_OVERHEAD","OBJECT_OVERHEAD","BLOCK_OVERHEAD","PTR_VIEW","assert","x","trimStacktrace","levels","stackTraceLimit","mmTagsToString","gcColorToString","oninfo","oncollect_","shadow","shadowStart","blocks","allocSites","freedBlocks","gcProfileStart","allocCount","resizeCount","moveCount","freeCount","heapBase","oninit","onalloc","onresize","onmove","onvisit","onfree","oninterrupt","onyield","onstore","onload","syncShadow","diff","byteLength","grow","Memory","initial","PAGE_SIZE","markShadow","oldSize","PTR_SIZE","size","errored","unmarkShadow","accessShadow","isLoad","isRT","getBlockInfo","mmInfo","gcInfo","gcInfo2","rtId","rtSize","tags","prev","active","check","allocStack","beforeInfo","newSize","oldPtr","newPtr","oldInfo","newInfo","freeStack","allocInfo","delete","total","plot","pause","interruptStart","bytes","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","globalThis","Function","window"],"sourceRoot":""}